{
  "address": "0x967ff1Fa8C06eB6511c54F8C7A6e6475c360cB55",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovedCuratorVaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reactionLimit",
          "type": "uint256"
        }
      ],
      "name": "FreeReactionLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "NativeWrappedTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IWMATIC",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "PaymentTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "ReactionPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleCuratorLiabilityBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendTakerBasisPointsUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressManager",
      "outputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedCuratorVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeReactionLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "_addressManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeWrappedToken",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "contract IWMATIC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reactionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleCuratorLiabilityBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovedCuratorVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reactionLimit",
          "type": "uint256"
        }
      ],
      "name": "setFreeReactionLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_nativeWrappedToken",
          "type": "address"
        }
      ],
      "name": "setNativeWrappedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IWMATIC",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "setPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reactionPrice",
          "type": "uint256"
        }
      ],
      "name": "setReactionPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleCuratorLiabilityBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleCuratorLiabilityBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendTakerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendTakerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendTakerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x92b687b4610d9d5c20cc7fe33c72a8f37ddf245658d0243c08c8097a893b48af",
  "receipt": {
    "to": null,
    "from": "0x8f1809FA5DDcf8275cf9C92fCeF40B2154a01022",
    "contractAddress": "0x967ff1Fa8C06eB6511c54F8C7A6e6475c360cB55",
    "transactionIndex": 6,
    "gasUsed": "1214900",
    "logsBloom": "0x
    "blockHash": "0xd135f136e061ad5fa0d1b695c045f33f1a9926e50da3af23834c608a5d3bc6ef",
    "transactionHash": "0x92b687b4610d9d5c20cc7fe33c72a8f37ddf245658d0243c08c8097a893b48af",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 29300220,
        "transactionHash": "0x92b687b4610d9d5c20cc7fe33c72a8f37ddf245658d0243c08c8097a893b48af",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008f1809fa5ddcf8275cf9c92fcef40b2154a01022",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000006796aec7a95b400000000000000000000000000000000000000000000000008bd443740e9d7d700000000000000000000000000000000000000000000000430a0227c923ee75c00000000000000000000000000000000000000000000000008b6cacc546f422300000000000000000000000000000000000000000000000430a69be77eb97d10",
        "logIndex": 17,
        "blockHash": "0xd135f136e061ad5fa0d1b695c045f33f1a9926e50da3af23834c608a5d3bc6ef"
      }
    ],
    "blockNumber": 29300220,
    "cumulativeGasUsed": "2287068",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "c5133092ee888b5b6431f6825032026e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovedCuratorVaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reactionLimit\",\"type\":\"uint256\"}],\"name\":\"FreeReactionLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"NativeWrappedTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IWMATIC\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"PaymentTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ReactionPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleCuratorLiabilityBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendTakerBasisPointsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedCuratorVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeReactionLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"_addressManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeWrappedToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IWMATIC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reactionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCuratorLiabilityBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovedCuratorVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reactionLimit\",\"type\":\"uint256\"}],\"name\":\"setFreeReactionLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_nativeWrappedToken\",\"type\":\"address\"}],\"name\":\"setNativeWrappedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWMATIC\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reactionPrice\",\"type\":\"uint256\"}],\"name\":\"setReactionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleCuratorLiabilityBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleCuratorLiabilityBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendTakerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendTakerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendTakerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.\",\"events\":{\"PaymentTokenUpdated(address)\":{\"details\":\"Events emitted on updates\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"initializer to call after deployment, can only be called once\"},\"setApprovedCuratorVaults(address,bool)\":{\"details\":\"Setter for the list of curator vaults allowed to be used\"},\"setFreeReactionLimit(uint256)\":{\"details\":\"Setter for the amount of reactions allowed per free reaction\"},\"setNativeWrappedToken(address)\":{\"details\":\"Setter for the native wrapped ERC20 token (e.g. WMATIC)\"},\"setPaymentToken(address)\":{\"details\":\"Setter for the payment token\"},\"setReactionPrice(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleCuratorLiabilityBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSpendReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the spend referrer basis points\"},\"setSpendTakerBasisPoints(uint256)\":{\"details\":\"Setter for the spend taker basis points\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Parameters/ParameterManager.sol\":\"ParameterManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"contracts/Config/IAddressManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Parameters/IParameterManager.sol\\\";\\nimport \\\"../Maker/IMakerRegistrar.sol\\\";\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Reactions/IReactionVault.sol\\\";\\nimport \\\"../CuratorVault/ICuratorVault.sol\\\";\\n\\ninterface IAddressManager {\\n    /// @dev Getter for the role manager address\\n    function roleManager() external returns (IRoleManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setRoleManager(IRoleManager _roleManager) external;\\n\\n    /// @dev Getter for the role manager address\\n    function parameterManager() external returns (IParameterManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setParameterManager(IParameterManager _parameterManager) external;\\n\\n    /// @dev Getter for the maker registrar address\\n    function makerRegistrar() external returns (IMakerRegistrar);\\n\\n    /// @dev Setter for the maker registrar address\\n    function setMakerRegistrar(IMakerRegistrar _makerRegistrar) external;\\n\\n    /// @dev Getter for the reaction NFT contract address\\n    function reactionNftContract() external returns (IStandard1155);\\n\\n    /// @dev Setter for the reaction NFT contract address\\n    function setReactionNftContract(IStandard1155 _reactionNftContract)\\n        external;\\n\\n    /// @dev Getter for the default Curator Vault contract address\\n    function defaultCuratorVault() external returns (ICuratorVault);\\n\\n    /// @dev Setter for the default Curator Vault contract address\\n    function setDefaultCuratorVault(ICuratorVault _defaultCuratorVault)\\n        external;\\n\\n    /// @dev Getter for the L2 bridge registrar\\n    function childRegistrar() external returns (address);\\n\\n    /// @dev Setter for the L2 bridge registrar\\n    function setChildRegistrar(address _childRegistrar) external;\\n\\n    /// @dev Getter for the address of the royalty registry\\n    function royaltyRegistry() external returns (address);\\n\\n    /// @dev Setter for the address of the royalty registry\\n    function setRoyaltyRegistry(address _royaltyRegistry) external;\\n\\n    /// @dev Getter for the address of the Like Token Factory\\n    function likeTokenFactory() external returns (address);\\n\\n    /// @dev Setter for the address of the Like Token Factory\\n    function setLikeTokenFactory(address _likeTokenFactory) external;\\n}\\n\",\"keccak256\":\"0xd1b153a57c0135934db99bf8e91ecff25706412b621a11fdc66d8b2b25bc1283\",\"license\":\"GPL-3.0\"},\"contracts/CuratorVault/ICuratorVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @dev Interface for the curator vault\\ninterface ICuratorVault {\\n    function getTokenId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken\\n    ) external returns (uint256);\\n\\n    function buyCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken,\\n        uint256 paymentAmount,\\n        address mintToAddress,\\n        bool isTakerPosition\\n    ) external returns (uint256);\\n\\n    function sellCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken,\\n        uint256 tokensToBurn,\\n        address refundToAddress\\n    ) external returns (uint256);\\n\\n    function curatorTokens() external returns (IStandard1155);\\n}\\n\",\"keccak256\":\"0x1426350847e86f2870773a19a359b1e5adf89d81d1d7ae2dbdaa0507cf5ef660\",\"license\":\"GPL-3.0\"},\"contracts/Maker/IMakerRegistrar.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the maker registrar that supports registering and de-registering NFTs\\ninterface IMakerRegistrar {\\n    /// @dev struct for storing details about a registered NFT\\n    struct NftDetails {\\n        bool registered;\\n        address owner;\\n        address[] creators;\\n        uint256[] creatorSaleBasisPoints;\\n    }\\n\\n    function transformToSourceLookup(uint256 metaId) external returns (uint256);\\n\\n    function deriveSourceId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId\\n    ) external returns (uint256);\\n\\n    /// @dev lookup for NftDetails from source ID\\n    function sourceToDetailsLookup(uint256)\\n        external\\n        returns (NftDetails memory);\\n\\n    function verifyOwnership(\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address potentialOwner\\n    ) external returns (bool);\\n\\n    function registerNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address[] memory nftCreatorAddresses,\\n        uint256[] memory creatorSaleBasisPoints,\\n        uint256 optionBits,\\n        string memory ipfsMetadataHash\\n    ) external;\\n\\n    function deRegisterNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcba279f4966ad3a5d506b0661c847b6593805c2e25fbebb3792d33e71769656f\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/IParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\ninterface IParameterManager {\\n    /// @dev Getter for the payment token\\n    function paymentToken() external returns (IWMATIC);\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IWMATIC _paymentToken) external;\\n\\n    /// @dev Getter for the reaction price\\n    function reactionPrice() external returns (uint256);\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the curator liability\\n    function saleCuratorLiabilityBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the curator liability\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the referrer\\n    function saleReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the referrer\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendTakerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the taker\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints) external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the referrer\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the check to see if a curator vault is allowed to be used\\n    function approvedCuratorVaults(address potentialVault)\\n        external\\n        returns (bool);\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved) external;\\n\\n    /// @dev Getter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function nativeWrappedToken() external returns (IERC20Upgradeable);\\n\\n    /// @dev Setter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function setNativeWrappedToken(IERC20Upgradeable _nativeWrappedToken)\\n        external;\\n\\n    /// @dev Setter for free reaction limit\\n    function freeReactionLimit() external returns (uint256);\\n\\n    /// @dev Setter for free reaction limit\\n    function setFreeReactionLimit(uint256 limit) external;\\n}\\n\",\"keccak256\":\"0x091430591a4f7b0d4ac989f9bc08a26c91ae3a01cc4eedc5d4a4cf839c524e04\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"./ParameterManagerStorage.sol\\\";\\nimport \\\"../Config/IAddressManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/// @dev Note: This contract is protected via a permissioned account set in the role manager.  Caution should\\n/// be used as the role owner could renounce the role leaving all future actions disabled.  Additionally,\\n/// if a malicious account was able to obtain the role, they could use it to set values to malicious values.\\n/// See the public documentation website for more details.\\ncontract ParameterManager is Initializable, ParameterManagerStorageV2 {\\n    /// @dev Verifies with the role manager that the calling address has ADMIN role\\n    modifier onlyAdmin() {\\n        require(\\n            addressManager.roleManager().isParameterManagerAdmin(msg.sender),\\n            \\\"Not Admin\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev Events emitted on updates\\n    event PaymentTokenUpdated(IWMATIC newValue);\\n    event ReactionPriceUpdated(uint256 newValue);\\n    event SaleCuratorLiabilityBasisPointsUpdated(uint256 newValue);\\n    event SaleReferrerBasisPointsUpdated(uint256 newValue);\\n    event SpendTakerBasisPointsUpdated(uint256 newValue);\\n    event SpendReferrerBasisPointsUpdated(uint256 newValue);\\n    event ApprovedCuratorVaultsUpdated(address vault, bool approved);\\n    event NativeWrappedTokenUpdated(IERC20Upgradeable newValue);\\n    event FreeReactionLimitUpdated(uint256 reactionLimit);\\n\\n    /// @dev initializer to call after deployment, can only be called once\\n    function initialize(IAddressManager _addressManager) public initializer {\\n        require(address(_addressManager) != address(0x0), ZERO_INPUT);\\n        addressManager = _addressManager;\\n    }\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IWMATIC _paymentToken) external onlyAdmin {\\n        require(address(_paymentToken) != address(0x0), ZERO_INPUT);\\n        paymentToken = _paymentToken;\\n        emit PaymentTokenUpdated(_paymentToken);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external onlyAdmin {\\n        require(_reactionPrice != 0, ZERO_INPUT);\\n        reactionPrice = _reactionPrice;\\n        emit ReactionPriceUpdated(_reactionPrice);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external onlyAdmin {\\n        require(_saleCuratorLiabilityBasisPoints != 0, ZERO_INPUT);\\n        require(_saleCuratorLiabilityBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleCuratorLiabilityBasisPoints = _saleCuratorLiabilityBasisPoints;\\n        emit SaleCuratorLiabilityBasisPointsUpdated(\\n            _saleCuratorLiabilityBasisPoints\\n        );\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_saleReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_saleReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleReferrerBasisPoints = _saleReferrerBasisPoints;\\n        emit SaleReferrerBasisPointsUpdated(_saleReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend taker basis points\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendTakerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendTakerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendTakerBasisPoints = _spendTakerBasisPoints;\\n        emit SpendTakerBasisPointsUpdated(_spendTakerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend referrer basis points\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendReferrerBasisPoints = _spendReferrerBasisPoints;\\n        emit SpendReferrerBasisPointsUpdated(_spendReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved)\\n        external\\n        onlyAdmin\\n    {\\n        require(vault != address(0x0), ZERO_INPUT);\\n        approvedCuratorVaults[vault] = approved;\\n        emit ApprovedCuratorVaultsUpdated(vault, approved);\\n    }\\n\\n    /// @dev Setter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function setNativeWrappedToken(IERC20Upgradeable _nativeWrappedToken)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_nativeWrappedToken) != address(0x0), ZERO_INPUT);\\n        nativeWrappedToken = _nativeWrappedToken;\\n        emit NativeWrappedTokenUpdated(_nativeWrappedToken);\\n    }\\n\\n    /// @dev Setter for the amount of reactions allowed per free reaction\\n    function setFreeReactionLimit(uint256 _reactionLimit) external onlyAdmin {\\n        require(_reactionLimit > 0, ZERO_INPUT);\\n        freeReactionLimit = _reactionLimit;\\n        emit FreeReactionLimitUpdated(_reactionLimit);\\n    }\\n}\\n\",\"keccak256\":\"0xc8352a18a6a763d22e444e6a9f1cdcdcf4805eea46881b7a8c466033e9604dcd\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManagerStorage.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Config/IAddressManager.sol\\\";\\nimport \\\"./IParameterManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @title ParameterManagerStorage\\n/// @dev This contract will hold all local variables for the ParameterManager Contract\\n/// When upgrading the protocol, inherit from this contract on the V2 version and change the\\n/// ParameterManager to inherit from the later version.  This ensures there are no storage layout\\n/// corruptions when upgrading.\\nabstract contract ParameterManagerStorageV1 is IParameterManager {\\n    /// @dev Input error for 0 value param\\n    string internal constant ZERO_INPUT = \\\"Invalid 0 input\\\";\\n\\n    /// @dev local reference to the address manager contract\\n    IAddressManager public addressManager;\\n\\n    /// @dev The payment token used to buy reactions\\n    IWMATIC public paymentToken;\\n\\n    /// @dev The amount each reaction costs in paymentToken\\n    uint256 public reactionPrice;\\n\\n    /// @dev Basis points for the curator liability during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleCuratorLiabilityBasisPoints;\\n\\n    /// @dev Basis points for the referrer during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleReferrerBasisPoints;\\n\\n    /// @dev Basis points for the taker NFT owner.\\n    /// This is the percentage of the Curator Liability being assigned to the taker\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendTakerBasisPoints;\\n\\n    /// @dev Basis points for the spend referrer.\\n    /// This is the percentage of the Curator Liability being assigned to the referrer\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendReferrerBasisPoints;\\n\\n    /// @dev Mapping of the approved curator vaults (other than the default)\\n    /// If set to true then it is allowed to be used.\\n    mapping(address => bool) public approvedCuratorVaults;\\n}\\n\\nabstract contract ParameterManagerStorageV2 is ParameterManagerStorageV1 {\\n    /// @dev address of the blockchain's wrapped token, eg, WMATIC\\n    /// This allows the contracts to distinguish between payments in WMATIC vs, eg, USDC\\n    IERC20Upgradeable public nativeWrappedToken;\\n\\n    /// @dev Amount of reactions (quantity) allowed when reacting for free\\n    /// If set to true then it is allowed to be used.\\n    uint256 public freeReactionLimit;\\n}\\n\\n/// On the next version of the protocol, if new variables are added, put them in the below\\n/// contract and use this as the inheritance chain.\\n/**\\ncontract ParameterManagerStorageV3 is ParameterManagerStorageV2 {\\n  address newVariable;\\n}\\n */\\n\",\"keccak256\":\"0x057452f307b738a94f154724703c658690bbf1509becf108259bcea9a5ddc544\",\"license\":\"GPL-3.0\"},\"contracts/Permissions/IRoleManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface IRoleManager {\\n    /// @dev Determines if the specified address has capability to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isAdmin(address potentialAddress) external view returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to udpate addresses in the protocol\\n    /// @param potentialAddress Address to check\\n    function isAddressManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to update parameters in the protocol\\n    /// @param potentialAddress Address to check\\n    function isParameterManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isReactionNftAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to purchase curator vault tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorVaultPurchaser(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to mint and burn curator tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorTokenAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x335b249b073e02dd1ca255772734a1f21909694cf774e8c00f04c8095bf9eb30\",\"license\":\"GPL-3.0\"},\"contracts/Reactions/IReactionVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @dev Interface for the ReactionVault that supports buying and spending reactions\\ninterface IReactionVault {\\n    struct ReactionPriceDetails {\\n        IWMATIC paymentToken;\\n        uint256 reactionPrice;\\n        uint256 saleCuratorLiabilityBasisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0x686da314820d3b0a9eaa7409a6885bf49021f2906430167f610cdb047b46dc1b\",\"license\":\"GPL-3.0\"},\"contracts/Token/IStandard1155.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the Standard1155 toke contract.\\ninterface IStandard1155 {\\n    /// @dev Allows a priviledged account to mint tokens to the specified address\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x4d68249e8c10bd9aab5ae4dce0c72c88ac899a451b8624c409780cd60e88abc4\",\"license\":\"GPL-3.0\"},\"contracts/Token/IWMATIC.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for interacting with the wrapped matic token contract\\ninterface IWMATIC is IERC20Upgradeable {\\n    // Send MATIC directly to contract\\n    receive() external payable;\\n\\n    // Call deposit directly\\n    function deposit() external payable;\\n\\n    // Withdraw wrapped tokens into MATIC\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0x24dc1098e5e0ac44ae003cd466dd7d8693b2b5591804cf1f7d9600195b6d7d1c\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611503806100206000396000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c8063bfa53ada116100ad578063e4301ec511610071578063e4301ec51461026d578063f467320e14610280578063f93c0d7914610289578063f9911c7314610292578063fbc8cc58146102a557600080fd5b8063bfa53ada14610218578063c4d66de81461022b578063cc22c3e21461023e578063dafe4f9a14610247578063e15a8ce81461025a57600080fd5b80635ddb0cf2116100f45780635ddb0cf2146101a3578063655f28c1146101ac578063690dafaf146101bf5780636a326ab1146101d257806373cf2a67146101e557600080fd5b8062ac1c5a146101305780630ba9ced01461014c5780633013ce29146101555780633ab76e9f146101755780635b3c42ff1461018e575b600080fd5b61013960055481565b6040519081526020015b60405180910390f35b61013960095481565b600154610168906001600160a01b031681565b6040516101439190611347565b600054610168906201000090046001600160a01b031681565b6101a161019c36600461135b565b6102b8565b005b61013960025481565b6101a16101ba36600461135b565b610482565b6101a16101cd36600461139a565b61061a565b6101a16101e03660046113d3565b6107e9565b6102086101f33660046113d3565b60076020526000908152604090205460ff1681565b6040519015158152602001610143565b6101a161022636600461135b565b6109a0565b6101a16102393660046113d3565b610b38565b61013960065481565b6101a161025536600461135b565b610c62565b6101a161026836600461135b565b610e1c565b600854610168906001600160a01b031681565b61013960045481565b61013960035481565b6101a16102a03660046113d3565b610fd6565b6101a16102b336600461135b565b61118d565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561030757600080fd5b505af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161036a9190611347565b60206040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190611414565b6103df5760405162461bcd60e51b81526004016103d690611431565b60405180910390fd5b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816104235760405162461bcd60e51b81526004016103d69190611454565b506127108111156104465760405162461bcd60e51b81526004016103d6906114a9565b60058190556040518181527f8675d4b071dd3bb74a333fda8ae022c69bab50eeafbf1ae61cbffc73f052ab02906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050991906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016105349190611347565b60206040518083038186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611414565b6105a05760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816105e45760405162461bcd60e51b81526004016103d69190611454565b5060028190556040518181527f1efb1db4037f964fdb0d9ce83125a4e3f84d55efaf654830ed8d034c30ad25dc90602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561066957600080fd5b505af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016106cc9190611347565b60206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190611414565b6107385760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0383166107855760405162461bcd60e51b81526004016103d69190611454565b506001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f69dbdf6bdc042e90cff52a0317d54ee5ffb99ed454145bedb5f0967f948e2d40910160405180910390a15050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087091906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161089b9190611347565b60206040518083038186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611414565b6109075760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166109545760405162461bcd60e51b81526004016103d69190611454565b50600180546001600160a01b0319166001600160a01b0383161790556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390610477908390611347565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ef57600080fd5b505af1158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2791906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610a529190611347565b60206040518083038186803b158015610a6a57600080fd5b505afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611414565b610abe5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610b025760405162461bcd60e51b81526004016103d69190611454565b5060098190556040518181527fce5c5f3d530cb7e178242c6d0339af2741497ab1d0d5a84a7bab48b5c590a6b090602001610477565b600054610100900460ff16610b535760005460ff1615610b57565b303b155b610bba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103d6565b600054610100900460ff16158015610bdc576000805461ffff19166101011790555b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038316610c295760405162461bcd60e51b81526004016103d69190611454565b506000805462010000600160b01b031916620100006001600160a01b038516021790558015610c5e576000805461ff00191690555b5050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce991906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610d149190611347565b60206040518083038186803b158015610d2c57600080fd5b505afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d649190611414565b610d805760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610dc45760405162461bcd60e51b81526004016103d69190611454565b50612710811115610de75760405162461bcd60e51b81526004016103d6906114a9565b60048190556040518181527f7b568aa985a32d076146f32f69e22aadf408b8f76c3a2f4ee694228afc2cc82790602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610e6b57600080fd5b505af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea391906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610ece9190611347565b60206040518083038186803b158015610ee657600080fd5b505afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190611414565b610f3a5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610f7e5760405162461bcd60e51b81526004016103d69190611454565b50612710811115610fa15760405162461bcd60e51b81526004016103d6906114a9565b60038190556040518181527fab8f93c67b0c7463f6f99579fa9b11ae2cb0de74594b6562724ab1ddecddaeb290602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561102557600080fd5b505af1158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d91906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016110889190611347565b60206040518083038186803b1580156110a057600080fd5b505afa1580156110b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d89190611414565b6110f45760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166111415760405162461bcd60e51b81526004016103d69190611454565b50600880546001600160a01b0319166001600160a01b0383161790556040517fb76854c9a4a92dc33c696090a8a86f40eed75f651baa9531b9b68e59f4d4001b90610477908390611347565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111dc57600080fd5b505af11580156111f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121491906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161123f9190611347565b60206040518083038186803b15801561125757600080fd5b505afa15801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f9190611414565b6112ab5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816112ef5760405162461bcd60e51b81526004016103d69190611454565b506127108111156113125760405162461bcd60e51b81526004016103d6906114a9565b60068190556040518181527f5286e9f4ccb1f31b46dce4870d04977bb0cf83b6c79d0ba3d5cc760bc5902a7090602001610477565b6001600160a01b0391909116815260200190565b60006020828403121561136d57600080fd5b5035919050565b6001600160a01b038116811461138957600080fd5b50565b801515811461138957600080fd5b600080604083850312156113ad57600080fd5b82356113b881611374565b915060208301356113c88161138c565b809150509250929050565b6000602082840312156113e557600080fd5b81356113f081611374565b9392505050565b60006020828403121561140957600080fd5b81516113f081611374565b60006020828403121561142657600080fd5b81516113f08161138c565b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b600060208083528351808285015260005b8181101561148157858101830151858201604001528201611465565b81811115611493576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252600a90820152690496e76616c69642062760b41b60408201526060019056fea26469706673582212204b8402e150657c1e89d90a3cf8edb0addfbef2b81fb0a2cdc5cd96d051f66b4064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012b5760003560e01c8063bfa53ada116100ad578063e4301ec511610071578063e4301ec51461026d578063f467320e14610280578063f93c0d7914610289578063f9911c7314610292578063fbc8cc58146102a557600080fd5b8063bfa53ada14610218578063c4d66de81461022b578063cc22c3e21461023e578063dafe4f9a14610247578063e15a8ce81461025a57600080fd5b80635ddb0cf2116100f45780635ddb0cf2146101a3578063655f28c1146101ac578063690dafaf146101bf5780636a326ab1146101d257806373cf2a67146101e557600080fd5b8062ac1c5a146101305780630ba9ced01461014c5780633013ce29146101555780633ab76e9f146101755780635b3c42ff1461018e575b600080fd5b61013960055481565b6040519081526020015b60405180910390f35b61013960095481565b600154610168906001600160a01b031681565b6040516101439190611347565b600054610168906201000090046001600160a01b031681565b6101a161019c36600461135b565b6102b8565b005b61013960025481565b6101a16101ba36600461135b565b610482565b6101a16101cd36600461139a565b61061a565b6101a16101e03660046113d3565b6107e9565b6102086101f33660046113d3565b60076020526000908152604090205460ff1681565b6040519015158152602001610143565b6101a161022636600461135b565b6109a0565b6101a16102393660046113d3565b610b38565b61013960065481565b6101a161025536600461135b565b610c62565b6101a161026836600461135b565b610e1c565b600854610168906001600160a01b031681565b61013960045481565b61013960035481565b6101a16102a03660046113d3565b610fd6565b6101a16102b336600461135b565b61118d565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561030757600080fd5b505af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f91906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161036a9190611347565b60206040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190611414565b6103df5760405162461bcd60e51b81526004016103d690611431565b60405180910390fd5b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816104235760405162461bcd60e51b81526004016103d69190611454565b506127108111156104465760405162461bcd60e51b81526004016103d6906114a9565b60058190556040518181527f8675d4b071dd3bb74a333fda8ae022c69bab50eeafbf1ae61cbffc73f052ab02906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050991906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016105349190611347565b60206040518083038186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611414565b6105a05760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816105e45760405162461bcd60e51b81526004016103d69190611454565b5060028190556040518181527f1efb1db4037f964fdb0d9ce83125a4e3f84d55efaf654830ed8d034c30ad25dc90602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561066957600080fd5b505af115801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016106cc9190611347565b60206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190611414565b6107385760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0383166107855760405162461bcd60e51b81526004016103d69190611454565b506001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f69dbdf6bdc042e90cff52a0317d54ee5ffb99ed454145bedb5f0967f948e2d40910160405180910390a15050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087091906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161089b9190611347565b60206040518083038186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611414565b6109075760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166109545760405162461bcd60e51b81526004016103d69190611454565b50600180546001600160a01b0319166001600160a01b0383161790556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390610477908390611347565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ef57600080fd5b505af1158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2791906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610a529190611347565b60206040518083038186803b158015610a6a57600080fd5b505afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190611414565b610abe5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610b025760405162461bcd60e51b81526004016103d69190611454565b5060098190556040518181527fce5c5f3d530cb7e178242c6d0339af2741497ab1d0d5a84a7bab48b5c590a6b090602001610477565b600054610100900460ff16610b535760005460ff1615610b57565b303b155b610bba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103d6565b600054610100900460ff16158015610bdc576000805461ffff19166101011790555b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038316610c295760405162461bcd60e51b81526004016103d69190611454565b506000805462010000600160b01b031916620100006001600160a01b038516021790558015610c5e576000805461ff00191690555b5050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce991906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610d149190611347565b60206040518083038186803b158015610d2c57600080fd5b505afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d649190611414565b610d805760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610dc45760405162461bcd60e51b81526004016103d69190611454565b50612710811115610de75760405162461bcd60e51b81526004016103d6906114a9565b60048190556040518181527f7b568aa985a32d076146f32f69e22aadf408b8f76c3a2f4ee694228afc2cc82790602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610e6b57600080fd5b505af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea391906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610ece9190611347565b60206040518083038186803b158015610ee657600080fd5b505afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190611414565b610f3a5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610f7e5760405162461bcd60e51b81526004016103d69190611454565b50612710811115610fa15760405162461bcd60e51b81526004016103d6906114a9565b60038190556040518181527fab8f93c67b0c7463f6f99579fa9b11ae2cb0de74594b6562724ab1ddecddaeb290602001610477565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561102557600080fd5b505af1158015611039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105d91906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016110889190611347565b60206040518083038186803b1580156110a057600080fd5b505afa1580156110b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d89190611414565b6110f45760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166111415760405162461bcd60e51b81526004016103d69190611454565b50600880546001600160a01b0319166001600160a01b0383161790556040517fb76854c9a4a92dc33c696090a8a86f40eed75f651baa9531b9b68e59f4d4001b90610477908390611347565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111dc57600080fd5b505af11580156111f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121491906113f7565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161123f9190611347565b60206040518083038186803b15801561125757600080fd5b505afa15801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f9190611414565b6112ab5760405162461bcd60e51b81526004016103d690611431565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816112ef5760405162461bcd60e51b81526004016103d69190611454565b506127108111156113125760405162461bcd60e51b81526004016103d6906114a9565b60068190556040518181527f5286e9f4ccb1f31b46dce4870d04977bb0cf83b6c79d0ba3d5cc760bc5902a7090602001610477565b6001600160a01b0391909116815260200190565b60006020828403121561136d57600080fd5b5035919050565b6001600160a01b038116811461138957600080fd5b50565b801515811461138957600080fd5b600080604083850312156113ad57600080fd5b82356113b881611374565b915060208301356113c88161138c565b809150509250929050565b6000602082840312156113e557600080fd5b81356113f081611374565b9392505050565b60006020828403121561140957600080fd5b81516113f081611374565b60006020828403121561142657600080fd5b81516113f08161138c565b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b600060208083528351808285015260005b8181101561148157858101830151858201604001528201611465565b81811115611493576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252600a90820152690496e76616c69642062760b41b60408201526060019056fea26469706673582212204b8402e150657c1e89d90a3cf8edb0addfbef2b81fb0a2cdc5cd96d051f66b4064736f6c63430008090033",
  "devdoc": {
    "details": "Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.",
    "events": {
      "PaymentTokenUpdated(address)": {
        "details": "Events emitted on updates"
      }
    },
    "kind": "dev",
    "methods": {
      "initialize(address)": {
        "details": "initializer to call after deployment, can only be called once"
      },
      "setApprovedCuratorVaults(address,bool)": {
        "details": "Setter for the list of curator vaults allowed to be used"
      },
      "setFreeReactionLimit(uint256)": {
        "details": "Setter for the amount of reactions allowed per free reaction"
      },
      "setNativeWrappedToken(address)": {
        "details": "Setter for the native wrapped ERC20 token (e.g. WMATIC)"
      },
      "setPaymentToken(address)": {
        "details": "Setter for the payment token"
      },
      "setReactionPrice(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleCuratorLiabilityBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleReferrerBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSpendReferrerBasisPoints(uint256)": {
        "details": "Setter for the spend referrer basis points"
      },
      "setSpendTakerBasisPoints(uint256)": {
        "details": "Setter for the spend taker basis points"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2435,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2438,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 10090,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "addressManager",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IAddressManager)8328"
      },
      {
        "astId": 10094,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "paymentToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IWMATIC)13724"
      },
      {
        "astId": 10097,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "reactionPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10100,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleCuratorLiabilityBasisPoints",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 10103,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleReferrerBasisPoints",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 10106,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendTakerBasisPoints",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 10109,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendReferrerBasisPoints",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 10114,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "approvedCuratorVaults",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10121,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "nativeWrappedToken",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IERC20Upgradeable)4673"
      },
      {
        "astId": 10124,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "freeReactionLimit",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressManager)8328": {
        "encoding": "inplace",
        "label": "contract IAddressManager",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20Upgradeable)4673": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IWMATIC)13724": {
        "encoding": "inplace",
        "label": "contract IWMATIC",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}