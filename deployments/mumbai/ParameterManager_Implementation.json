{
  "address": "0xE144020f972476DFe936dDB84E8bb75D959f36d8",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovedCuratorVaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reactionLimit",
          "type": "uint256"
        }
      ],
      "name": "FreeReactionLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "NativeWrappedTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IWMATIC",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "PaymentTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "ReactionPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleCuratorLiabilityBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "name": "SignatureNonceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendTakerBasisPointsUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressManager",
      "outputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedCuratorVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeReactionLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "incSigNonceFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "_addressManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeWrappedToken",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "contract IWMATIC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reactionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleCuratorLiabilityBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovedCuratorVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reactionLimit",
          "type": "uint256"
        }
      ],
      "name": "setFreeReactionLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_nativeWrappedToken",
          "type": "address"
        }
      ],
      "name": "setNativeWrappedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IWMATIC",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "setPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reactionPrice",
          "type": "uint256"
        }
      ],
      "name": "setReactionPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleCuratorLiabilityBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleCuratorLiabilityBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendTakerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendTakerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sigNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendTakerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x081a27986a2be24cb86b815de7e38498bd82c159a943afc3a91fd423a98be0ff",
  "receipt": {
    "to": null,
    "from": "0x8f1809FA5DDcf8275cf9C92fCeF40B2154a01022",
    "contractAddress": "0xE144020f972476DFe936dDB84E8bb75D959f36d8",
    "transactionIndex": 0,
    "gasUsed": "1356046",
    "logsBloom": "0x
    "blockHash": "0xceddd339a6b55656b174af6dcf214569967b76e00d4a0a7667926521a1372592",
    "transactionHash": "0x081a27986a2be24cb86b815de7e38498bd82c159a943afc3a91fd423a98be0ff",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 32272116,
        "transactionHash": "0x081a27986a2be24cb86b815de7e38498bd82c159a943afc3a91fd423a98be0ff",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008f1809fa5ddcf8275cf9c92fcef40b2154a01022",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009a2a22042180000000000000000000000000000000000000000000000000005a3986387a0a850000000000000000000000000000000000000000000002db76edeb1d16a5bbc2e0000000000000000000000000000000000000000000000000599f5c1675e9050000000000000000000000000000000000000000000002db76ee854738a9dd42e",
        "logIndex": 0,
        "blockHash": "0xceddd339a6b55656b174af6dcf214569967b76e00d4a0a7667926521a1372592"
      }
    ],
    "blockNumber": 32272116,
    "cumulativeGasUsed": "1356046",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "b84b00b90490290595acf2b30cb1ae9d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovedCuratorVaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reactionLimit\",\"type\":\"uint256\"}],\"name\":\"FreeReactionLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"NativeWrappedTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IWMATIC\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"PaymentTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ReactionPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleCuratorLiabilityBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"SignatureNonceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendTakerBasisPointsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedCuratorVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeReactionLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"incSigNonceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"_addressManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeWrappedToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IWMATIC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reactionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCuratorLiabilityBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovedCuratorVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reactionLimit\",\"type\":\"uint256\"}],\"name\":\"setFreeReactionLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_nativeWrappedToken\",\"type\":\"address\"}],\"name\":\"setNativeWrappedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWMATIC\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reactionPrice\",\"type\":\"uint256\"}],\"name\":\"setReactionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleCuratorLiabilityBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleCuratorLiabilityBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendTakerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendTakerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sigNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendTakerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.\",\"events\":{\"PaymentTokenUpdated(address)\":{\"details\":\"Events emitted on updates\"}},\"kind\":\"dev\",\"methods\":{\"incSigNonceFor(address)\":{\"details\":\"Incrementer for an account's current EIP-712 signature nonce\"},\"initialize(address)\":{\"details\":\"initializer to call after deployment, can only be called once\"},\"setApprovedCuratorVaults(address,bool)\":{\"details\":\"Setter for the list of curator vaults allowed to be used\"},\"setFreeReactionLimit(uint256)\":{\"details\":\"Setter for the amount of reactions allowed per free reaction\"},\"setNativeWrappedToken(address)\":{\"details\":\"Setter for the native wrapped ERC20 token (e.g. WMATIC)\"},\"setPaymentToken(address)\":{\"details\":\"Setter for the payment token\"},\"setReactionPrice(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleCuratorLiabilityBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSpendReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the spend referrer basis points\"},\"setSpendTakerBasisPoints(uint256)\":{\"details\":\"Setter for the spend taker basis points\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Parameters/ParameterManager.sol\":\"ParameterManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/draft-IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"contracts/Config/IAddressManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Parameters/IParameterManager.sol\\\";\\nimport \\\"../Maker/IMakerRegistrar.sol\\\";\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Reactions/IReactionVault.sol\\\";\\nimport \\\"../CuratorVault/SigmoidCuratorVault/ICuratorVault.sol\\\";\\nimport \\\"../DispatcherManager/IDispatcherManager.sol\\\";\\n\\ninterface IAddressManager {\\n    /// @dev Getter for the role manager address\\n    function roleManager() external returns (IRoleManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setRoleManager(IRoleManager _roleManager) external;\\n\\n    /// @dev Getter for the role manager address\\n    function parameterManager() external returns (IParameterManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setParameterManager(IParameterManager _parameterManager) external;\\n\\n    /// @dev Getter for the maker registrar address\\n    function makerRegistrar() external returns (IMakerRegistrar);\\n\\n    /// @dev Setter for the maker registrar address\\n    function setMakerRegistrar(IMakerRegistrar _makerRegistrar) external;\\n\\n    /// @dev Getter for the reaction NFT contract address\\n    function reactionNftContract() external returns (IStandard1155);\\n\\n    /// @dev Setter for the reaction NFT contract address\\n    function setReactionNftContract(IStandard1155 _reactionNftContract)\\n        external;\\n\\n    /// @dev Getter for the default Curator Vault contract address\\n    function defaultCuratorVault() external returns (ICuratorVault);\\n\\n    /// @dev Setter for the default Curator Vault contract address\\n    function setDefaultCuratorVault(ICuratorVault _defaultCuratorVault)\\n        external;\\n\\n    /// @dev Getter for the L2 bridge registrar\\n    function childRegistrar() external returns (address);\\n\\n    /// @dev Setter for the L2 bridge registrar\\n    function setChildRegistrar(address _childRegistrar) external;\\n\\n    /// @dev Getter for the address of the royalty registry\\n    function royaltyRegistry() external returns (address);\\n\\n    /// @dev Setter for the address of the royalty registry\\n    function setRoyaltyRegistry(address _royaltyRegistry) external;\\n\\n    /// @dev Getter for the address of the Like Token Factory\\n    function likeTokenFactory() external returns (address);\\n\\n    /// @dev Setter for the address of the Like Token Factory\\n    function setLikeTokenFactory(address _likeTokenFactory) external;\\n\\n    /// @dev Getter for the address of the DispatcherManager\\n    function dispatcherManager() external returns (IDispatcherManager);\\n\\n    /// @dev Setter for the address of the DispatcherManager;\\n    function setDispatcherManager(IDispatcherManager _dispatcherManager)\\n        external;\\n}\\n\",\"keccak256\":\"0x3f771b21196805238abcad8ff5bd92c06a7c5c4cf9043342a092107ba2168e76\",\"license\":\"GPL-3.0\"},\"contracts/CuratorVault/SigmoidCuratorVault/ICuratorVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../../Token/IStandard1155.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for the curator vault\\ninterface ICuratorVault {\\n    function getTokenId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken\\n    ) external returns (uint256);\\n\\n    function buyCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken,\\n        uint256 paymentAmount,\\n        address mintToAddress,\\n        bool isTakerPosition\\n    ) external returns (uint256);\\n\\n    function sellCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken,\\n        uint256 tokensToBurn,\\n        address refundToAddress\\n    ) external returns (uint256);\\n\\n    function curatorTokens() external returns (IStandard1155);\\n}\\n\",\"keccak256\":\"0x4c69f5f3d4f76dcbceb716ed541680e3bc17154f158f41dd4c7723719478e17d\",\"license\":\"GPL-3.0\"},\"contracts/DispatcherManager/IDispatcherManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport {DataTypes} from \\\"../WithSig/DataTypes.sol\\\";\\n\\ninterface IDispatcherManager {\\n    /// @dev\\n    function addDispatcher(address _dispatcher) external;\\n\\n    /// @dev\\n    function removeDispatcher(address _dispatcher) external;\\n\\n    /// @dev\\n    function addDispatcherWithSig(\\n        DataTypes.AddDispatcherWithSigData calldata vars\\n    ) external;\\n\\n    /// @dev\\n    function removeDispatcherWithSig(\\n        DataTypes.RemoveDispatcherWithSigData calldata vars\\n    ) external;\\n\\n    /// @dev\\n    function isDispatcherFor(address _account, address _maybeDispatcher)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x2ca5c22c956decc9b3c8017cf817964de6b3641556b9c12c814f9640ec347d83\",\"license\":\"GPL-3.0\"},\"contracts/Maker/IMakerRegistrar.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the maker registrar that supports registering and de-registering NFTs\\ninterface IMakerRegistrar {\\n    /// @dev struct for storing details about a registered NFT\\n    struct NftDetails {\\n        bool registered;\\n        address owner;\\n        address[] creators;\\n        uint256[] creatorSaleBasisPoints;\\n    }\\n\\n    function transformToSourceLookup(uint256 metaId) external returns (uint256);\\n\\n    function deriveSourceId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId\\n    ) external returns (uint256);\\n\\n    /// @dev lookup for NftDetails from source ID\\n    function sourceToDetailsLookup(uint256)\\n        external\\n        returns (NftDetails memory);\\n\\n    function verifyOwnership(\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address potentialOwner\\n    ) external returns (bool);\\n\\n    function registerNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address[] memory nftCreatorAddresses,\\n        uint256[] memory creatorSaleBasisPoints,\\n        uint256 optionBits,\\n        string memory ipfsMetadataHash\\n    ) external;\\n\\n    function deRegisterNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcba279f4966ad3a5d506b0661c847b6593805c2e25fbebb3792d33e71769656f\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/IParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\ninterface IParameterManager {\\n    /// @dev Getter for the payment token\\n    function paymentToken() external returns (IWMATIC);\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IWMATIC _paymentToken) external;\\n\\n    /// @dev Getter for the reaction price\\n    function reactionPrice() external returns (uint256);\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the curator liability\\n    function saleCuratorLiabilityBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the curator liability\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the referrer\\n    function saleReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the referrer\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendTakerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the taker\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints) external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the referrer\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the check to see if a curator vault is allowed to be used\\n    function approvedCuratorVaults(address potentialVault)\\n        external\\n        returns (bool);\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved) external;\\n\\n    /// @dev Getter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function nativeWrappedToken() external returns (IERC20Upgradeable);\\n\\n    /// @dev Setter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function setNativeWrappedToken(IERC20Upgradeable _nativeWrappedToken)\\n        external;\\n\\n    /// @dev Getter for free reaction limit\\n    function freeReactionLimit() external returns (uint256);\\n\\n    /// @dev Setter for free reaction limit\\n    function setFreeReactionLimit(uint256 limit) external;\\n\\n    /// @dev Getter for an account's current EIP-712 signature nonce\\n    function sigNonces(address signer) external returns (uint256);\\n\\n    /// @dev Incrementer for an account's current EIP-712 signature nonce\\n    function incSigNonceFor(address signer) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x366a920d3ccc94f60090a03667c0ed6bfb6d2e8cd09df3031267d14e0d9f2355\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"./ParameterManagerStorage.sol\\\";\\nimport \\\"../Config/IAddressManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/// @dev Note: This contract is protected via a permissioned account set in the role manager.  Caution should\\n/// be used as the role owner could renounce the role leaving all future actions disabled.  Additionally,\\n/// if a malicious account was able to obtain the role, they could use it to set values to malicious values.\\n/// See the public documentation website for more details.\\ncontract ParameterManager is Initializable, ParameterManagerStorageV3 {\\n    /// @dev Verifies with the role manager that the calling address has ADMIN role\\n    modifier onlyAdmin() {\\n        require(\\n            addressManager.roleManager().isParameterManagerAdmin(msg.sender),\\n            \\\"Not Admin\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev Verifies with the role manager that the calling address has NONCE_UPDATER role\\n    modifier onlySigNonceUpdater() {\\n        require(\\n            addressManager.roleManager().isSigNonceUpdater(msg.sender),\\n            \\\"Not signature nonce updater\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev Events emitted on updates\\n    event PaymentTokenUpdated(IWMATIC newValue);\\n    event ReactionPriceUpdated(uint256 newValue);\\n    event SaleCuratorLiabilityBasisPointsUpdated(uint256 newValue);\\n    event SaleReferrerBasisPointsUpdated(uint256 newValue);\\n    event SpendTakerBasisPointsUpdated(uint256 newValue);\\n    event SpendReferrerBasisPointsUpdated(uint256 newValue);\\n    event ApprovedCuratorVaultsUpdated(address vault, bool approved);\\n    event NativeWrappedTokenUpdated(IERC20Upgradeable newValue);\\n    event FreeReactionLimitUpdated(uint256 reactionLimit);\\n    event SignatureNonceUpdated(address signer, uint256 newNonce);\\n\\n    /// @dev initializer to call after deployment, can only be called once\\n    function initialize(IAddressManager _addressManager) public initializer {\\n        require(address(_addressManager) != address(0x0), ZERO_INPUT);\\n        addressManager = _addressManager;\\n    }\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IWMATIC _paymentToken) external onlyAdmin {\\n        require(address(_paymentToken) != address(0x0), ZERO_INPUT);\\n        paymentToken = _paymentToken;\\n        emit PaymentTokenUpdated(_paymentToken);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external onlyAdmin {\\n        require(_reactionPrice != 0, ZERO_INPUT);\\n        reactionPrice = _reactionPrice;\\n        emit ReactionPriceUpdated(_reactionPrice);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external onlyAdmin {\\n        require(_saleCuratorLiabilityBasisPoints != 0, ZERO_INPUT);\\n        require(_saleCuratorLiabilityBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleCuratorLiabilityBasisPoints = _saleCuratorLiabilityBasisPoints;\\n        emit SaleCuratorLiabilityBasisPointsUpdated(\\n            _saleCuratorLiabilityBasisPoints\\n        );\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_saleReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_saleReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleReferrerBasisPoints = _saleReferrerBasisPoints;\\n        emit SaleReferrerBasisPointsUpdated(_saleReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend taker basis points\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendTakerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendTakerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendTakerBasisPoints = _spendTakerBasisPoints;\\n        emit SpendTakerBasisPointsUpdated(_spendTakerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend referrer basis points\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendReferrerBasisPoints = _spendReferrerBasisPoints;\\n        emit SpendReferrerBasisPointsUpdated(_spendReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved)\\n        external\\n        onlyAdmin\\n    {\\n        require(vault != address(0x0), ZERO_INPUT);\\n        approvedCuratorVaults[vault] = approved;\\n        emit ApprovedCuratorVaultsUpdated(vault, approved);\\n    }\\n\\n    /// @dev Setter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function setNativeWrappedToken(IERC20Upgradeable _nativeWrappedToken)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_nativeWrappedToken) != address(0x0), ZERO_INPUT);\\n        nativeWrappedToken = _nativeWrappedToken;\\n        emit NativeWrappedTokenUpdated(_nativeWrappedToken);\\n    }\\n\\n    /// @dev Setter for the amount of reactions allowed per free reaction\\n    function setFreeReactionLimit(uint256 _reactionLimit) external onlyAdmin {\\n        require(_reactionLimit > 0, ZERO_INPUT);\\n        freeReactionLimit = _reactionLimit;\\n        emit FreeReactionLimitUpdated(_reactionLimit);\\n    }\\n\\n    /// @dev Incrementer for an account's current EIP-712 signature nonce\\n    function incSigNonceFor(address signer)\\n        external\\n        onlySigNonceUpdater\\n        returns (uint256 nonce)\\n    {\\n        // Returns the original nonce\\n        nonce = sigNonces[signer];\\n        uint256 incrementedNonce = nonce + 1;\\n        sigNonces[signer] = incrementedNonce;\\n        emit SignatureNonceUpdated(signer, incrementedNonce);\\n    }\\n}\\n\",\"keccak256\":\"0xe32cdac4dfc3a501bde326aded2958eee99bc8b8e3ca43240aea1c7109f94560\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManagerStorage.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Config/IAddressManager.sol\\\";\\nimport \\\"./IParameterManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @title ParameterManagerStorage\\n/// @dev This contract will hold all local variables for the ParameterManager Contract\\n/// When upgrading the protocol, inherit from this contract on the V2 version and change the\\n/// ParameterManager to inherit from the later version.  This ensures there are no storage layout\\n/// corruptions when upgrading.\\nabstract contract ParameterManagerStorageV1 is IParameterManager {\\n    /// @dev Input error for 0 value param\\n    string internal constant ZERO_INPUT = \\\"Invalid 0 input\\\";\\n\\n    /// @dev local reference to the address manager contract\\n    IAddressManager public addressManager;\\n\\n    /// @dev The payment token used to buy reactions\\n    IWMATIC public paymentToken;\\n\\n    /// @dev The amount each reaction costs in paymentToken\\n    uint256 public reactionPrice;\\n\\n    /// @dev Basis points for the curator liability during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleCuratorLiabilityBasisPoints;\\n\\n    /// @dev Basis points for the referrer during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleReferrerBasisPoints;\\n\\n    /// @dev Basis points for the taker NFT owner.\\n    /// This is the percentage of the Curator Liability being assigned to the taker\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendTakerBasisPoints;\\n\\n    /// @dev Basis points for the spend referrer.\\n    /// This is the percentage of the Curator Liability being assigned to the referrer\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendReferrerBasisPoints;\\n\\n    /// @dev Mapping of the approved curator vaults (other than the default)\\n    /// If set to true then it is allowed to be used.\\n    mapping(address => bool) public approvedCuratorVaults;\\n}\\n\\nabstract contract ParameterManagerStorageV2 is ParameterManagerStorageV1 {\\n    /// @dev address of the blockchain's wrapped token, eg, WMATIC\\n    /// This allows the contracts to distinguish between payments in WMATIC vs, eg, USDC\\n    IERC20Upgradeable public nativeWrappedToken;\\n\\n    /// @dev Amount of reactions (quantity) allowed when reacting for free\\n    /// If set to true then it is allowed to be used.\\n    uint256 public freeReactionLimit;\\n}\\n\\nabstract contract ParameterManagerStorageV3 is ParameterManagerStorageV2 {\\n    /// @dev Mapping to track the nonces of accounts sending tx's via EIP-712 sigs\\n    mapping(address => uint256) public sigNonces;\\n}\\n\\n/// On the next version of the protocol, if new variables are added, put them in the below\\n/// contract and use this as the inheritance chain.\\n/**\\ncontract ParameterManagerStorageV4 is ParameterManagerStorageV3 {\\n  address newVariable;\\n}\\n */\\n\",\"keccak256\":\"0xb8b6cd3c33bdac20620d1d8ee9f2d73579ad6b9abc7c46b5c5f38ab47ee62a46\",\"license\":\"GPL-3.0\"},\"contracts/Permissions/IRoleManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface IRoleManager {\\n    /// @dev Determines if the specified address has capability to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isAdmin(address potentialAddress) external view returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to udpate addresses in the protocol\\n    /// @param potentialAddress Address to check\\n    function isAddressManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to update parameters in the protocol\\n    /// @param potentialAddress Address to check\\n    function isParameterManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isReactionNftAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to purchase curator vault tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorVaultPurchaser(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to mint and burn curator tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorTokenAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to update sigNonces\\n    /// @param potentialAddress Address to check\\n    function isSigNonceUpdater(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x752f9e11049dbc026b0c092e8af4b03c33d884e67915be570b6ee767a8c03633\",\"license\":\"GPL-3.0\"},\"contracts/Reactions/IReactionVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @dev Interface for the ReactionVault that supports buying and spending reactions\\ninterface IReactionVault {\\n    struct ReactionPriceDetails {\\n        IWMATIC paymentToken;\\n        uint256 reactionPrice;\\n        uint256 saleCuratorLiabilityBasisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0x686da314820d3b0a9eaa7409a6885bf49021f2906430167f610cdb047b46dc1b\",\"license\":\"GPL-3.0\"},\"contracts/Token/IStandard1155.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the Standard1155 toke contract.\\ninterface IStandard1155 {\\n    /// @dev Allows a priviledged account to mint tokens to the specified address\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x4d68249e8c10bd9aab5ae4dce0c72c88ac899a451b8624c409780cd60e88abc4\",\"license\":\"GPL-3.0\"},\"contracts/Token/IWMATIC.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for interacting with the wrapped matic token contract\\ninterface IWMATIC is IERC20Upgradeable {\\n    // Send MATIC directly to contract\\n    receive() external payable;\\n\\n    // Call deposit directly\\n    function deposit() external payable;\\n\\n    // Withdraw wrapped tokens into MATIC\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0x24dc1098e5e0ac44ae003cd466dd7d8693b2b5591804cf1f7d9600195b6d7d1c\",\"license\":\"GPL-3.0\"},\"contracts/WithSig/DataTypes.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @title DataTypes\\n/// @dev A standard library of data types used throughout the Rara Protocol\\nlibrary DataTypes {\\n    /// @notice A struct containing the necessary information to reconstruct an EIP-712 typed data signature.\\n    /// @param v The signature's recovery parameter.\\n    /// @param r The signature's r parameter.\\n    /// @param s The signature's s parameter\\n    /// @param deadline The signature's deadline\\n    struct EIP712Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice A struct containing the parameters required for the `reactWithSig()` function.\\n    ///         Parameters are almost the same as the regular `react()` function, with the reactor's (signer) address and an EIP712Signature added.\\n    /// @param reactor The reactor which is the message signer.\\n    /// @param transformId Internal id used to derive the reaction token id.\\n    /// @param quantity How many reactions to spend.\\n    /// @param optionBits Optional param to specify options how the user wants transform reaction\\n    /// @param takerNftChainId Chain ID where the NFT lives\\n    /// @param takerNftAddress Target contract where the reaction is targeting\\n    /// @param takerNftId Target NFT ID in the contract\\n    /// @param ipfsMetadataHash Optional hash of any metadata being associated with spend action\\n    /// @param sig The EIP712Signature struct containing the follower's signature.\\n    struct ReactWithSigData {\\n        address reactor;\\n        uint256 transformId;\\n        uint256 quantity;\\n        uint256 optionBits;\\n        uint256 takerNftChainId;\\n        address takerNftAddress;\\n        uint256 takerNftId;\\n        string ipfsMetadataHash;\\n        EIP712Signature sig;\\n    }\\n\\n    struct RegisterNftWithSigData {\\n        address registrant;\\n        address nftContractAddress;\\n        uint256 nftId;\\n        address creatorAddress;\\n        uint256 creatorSaleBasisPoints;\\n        uint256 optionBits;\\n        string ipfsMetadataHash;\\n        EIP712Signature sig;\\n    }\\n\\n    /**\\n     * @notice A struct containing the parameters required for the `addDispatcherWithSig()` function.\\n     *\\n     * @param account The address of the account adding the dispatcher.\\n     * @param dispatcher The dispatcher address to add for the account.\\n     * @param sig The EIP712Signature struct containing the account's signature.\\n     */\\n    struct AddDispatcherWithSigData {\\n        address account;\\n        address dispatcher;\\n        EIP712Signature sig;\\n    }\\n\\n    /**\\n     * @notice A struct containing the parameters required for the `removeDispatcherWithSig()` function.\\n     *\\n     * @param account The address of the account removing the dispatcher.\\n     * @param dispatcher The dispatcher address to remove from the account.\\n     * @param sig The EIP712Signature struct containing the account's signature.\\n     */\\n    struct RemoveDispatcherWithSigData {\\n        address account;\\n        address dispatcher;\\n        EIP712Signature sig;\\n    }\\n}\\n\",\"keccak256\":\"0x9fde21fcf21b39f5e14f3c48ee50d9b442790224d08b9808af5ec496d66a0d22\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611791806100206000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c8063c4d66de8116100b8578063e4301ec51161007c578063e4301ec514610296578063f467320e146102a9578063f93c0d79146102b2578063f990ccd7146102bb578063f9911c73146102db578063fbc8cc58146102ee57600080fd5b8063c4d66de814610241578063c9fac01c14610254578063cc22c3e214610267578063dafe4f9a14610270578063e15a8ce81461028357600080fd5b80635ddb0cf21161010a5780635ddb0cf2146101b9578063655f28c1146101c2578063690dafaf146101d55780636a326ab1146101e857806373cf2a67146101fb578063bfa53ada1461022e57600080fd5b8062ac1c5a146101465780630ba9ced0146101625780633013ce291461016b5780633ab76e9f1461018b5780635b3c42ff146101a4575b600080fd5b61014f60055481565b6040519081526020015b60405180910390f35b61014f60095481565b60015461017e906001600160a01b031681565b60405161015991906115af565b60005461017e906201000090046001600160a01b031681565b6101b76101b23660046115c3565b610301565b005b61014f60025481565b6101b76101d03660046115c3565b6104cb565b6101b76101e3366004611602565b610663565b6101b76101f636600461163b565b610833565b61021e61020936600461163b565b60076020526000908152604090205460ff1681565b6040519015158152602001610159565b6101b761023c3660046115c3565b6109ea565b6101b761024f36600461163b565b610b82565b61014f61026236600461163b565b610cf8565b61014f60065481565b6101b761027e3660046115c3565b610eca565b6101b76102913660046115c3565b611084565b60085461017e906001600160a01b031681565b61014f60045481565b61014f60035481565b61014f6102c936600461163b565b600a6020526000908152604090205481565b6101b76102e936600461163b565b61123e565b6101b76102fc3660046115c3565b6113f5565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610388919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016103b391906115af565b60206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610403919061167c565b6104285760405162461bcd60e51b815260040161041f90611699565b60405180910390fd5b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201528161046c5760405162461bcd60e51b815260040161041f91906116bc565b5061271081111561048f5760405162461bcd60e51b815260040161041f90611711565b60058190556040518181527f8675d4b071dd3bb74a333fda8ae022c69bab50eeafbf1ae61cbffc73f052ab02906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610552919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161057d91906115af565b60206040518083038186803b15801561059557600080fd5b505afa1580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd919061167c565b6105e95760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201528161062d5760405162461bcd60e51b815260040161041f91906116bc565b5060028190556040518181527f1efb1db4037f964fdb0d9ce83125a4e3f84d55efaf654830ed8d034c30ad25dc906020016104c0565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161071591906115af565b60206040518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610765919061167c565b6107815760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0383166107ce5760405162461bcd60e51b815260040161041f91906116bc565b506001600160a01b038216600081815260076020908152604091829020805460ff19168515159081179091558251938452908301527f69dbdf6bdc042e90cff52a0317d54ee5ffb99ed454145bedb5f0967f948e2d4091015b60405180910390a15050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016108e591906115af565b60206040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610935919061167c565b6109515760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b03821661099e5760405162461bcd60e51b815260040161041f91906116bc565b50600180546001600160a01b0319166001600160a01b0383161790556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913906104c09083906115af565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a3957600080fd5b505af1158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a71919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610a9c91906115af565b60206040518083038186803b158015610ab457600080fd5b505afa158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec919061167c565b610b085760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b602082015281610b4c5760405162461bcd60e51b815260040161041f91906116bc565b5060098190556040518181527fce5c5f3d530cb7e178242c6d0339af2741497ab1d0d5a84a7bab48b5c590a6b0906020016104c0565b600054610100900460ff1615808015610ba25750600054600160ff909116105b80610bbc5750303b158015610bbc575060005460ff166001145b610c1f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161041f565b6000805460ff191660011790558015610c42576000805461ff0019166101001790555b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038316610c8f5760405162461bcd60e51b815260040161041f91906116bc565b506000805462010000600160b01b031916620100006001600160a01b038516021790558015610cf4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610827565b5050565b60008060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d80919061165f565b6001600160a01b0316639aeb7fae336040518263ffffffff1660e01b8152600401610dab91906115af565b60206040518083038186803b158015610dc357600080fd5b505afa158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb919061167c565b610e475760405162461bcd60e51b815260206004820152601b60248201527f4e6f74207369676e6174757265206e6f6e636520757064617465720000000000604482015260640161041f565b506001600160a01b0381166000908152600a602052604081205490610e6d826001611735565b6001600160a01b0384166000818152600a6020908152604091829020849055815192835282018390529192507fe3a37128c09b4d45c84765acff94a4e940a081f69cf95882dd0e7f2b0e57fe7c910160405180910390a150919050565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f51919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b8152600401610f7c91906115af565b60206040518083038186803b158015610f9457600080fd5b505afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc919061167c565b610fe85760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201528161102c5760405162461bcd60e51b815260040161041f91906116bc565b5061271081111561104f5760405162461bcd60e51b815260040161041f90611711565b60048190556040518181527f7b568aa985a32d076146f32f69e22aadf408b8f76c3a2f4ee694228afc2cc827906020016104c0565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110d357600080fd5b505af11580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b815260040161113691906115af565b60206040518083038186803b15801561114e57600080fd5b505afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611186919061167c565b6111a25760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816111e65760405162461bcd60e51b815260040161041f91906116bc565b506127108111156112095760405162461bcd60e51b815260040161041f90611711565b60038190556040518181527fab8f93c67b0c7463f6f99579fa9b11ae2cb0de74594b6562724ab1ddecddaeb2906020016104c0565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561128d57600080fd5b505af11580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c5919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016112f091906115af565b60206040518083038186803b15801561130857600080fd5b505afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611340919061167c565b61135c5760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166113a95760405162461bcd60e51b815260040161041f91906116bc565b50600880546001600160a01b0319166001600160a01b0383161790556040517fb76854c9a4a92dc33c696090a8a86f40eed75f651baa9531b9b68e59f4d4001b906104c09083906115af565b600060029054906101000a90046001600160a01b03166001600160a01b031662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561144457600080fd5b505af1158015611458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147c919061165f565b6001600160a01b0316636d993046336040518263ffffffff1660e01b81526004016114a791906115af565b60206040518083038186803b1580156114bf57600080fd5b505afa1580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f7919061167c565b6115135760405162461bcd60e51b815260040161041f90611699565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b6020820152816115575760405162461bcd60e51b815260040161041f91906116bc565b5061271081111561157a5760405162461bcd60e51b815260040161041f90611711565b60068190556040518181527f5286e9f4ccb1f31b46dce4870d04977bb0cf83b6c79d0ba3d5cc760bc5902a70906020016104c0565b6001600160a01b0391909116815260200190565b6000602082840312156115d557600080fd5b5035919050565b6001600160a01b03811681146115f157600080fd5b50565b80151581146115f157600080fd5b6000806040838503121561161557600080fd5b8235611620816115dc565b91506020830135611630816115f4565b809150509250929050565b60006020828403121561164d57600080fd5b8135611658816115dc565b9392505050565b60006020828403121561167157600080fd5b8151611658816115dc565b60006020828403121561168e57600080fd5b8151611658816115f4565b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b600060208083528351808285015260005b818110156116e9578581018301518582016040015282016116cd565b818111156116fb576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252600a90820152690496e76616c69642062760b41b604082015260600190565b6000821982111561175657634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122065b1fdcbd64bc6445a88e59ec28837b2db6e242df7de76067f2ac45be425fcf764736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.",
    "events": {
      "PaymentTokenUpdated(address)": {
        "details": "Events emitted on updates"
      }
    },
    "kind": "dev",
    "methods": {
      "incSigNonceFor(address)": {
        "details": "Incrementer for an account's current EIP-712 signature nonce"
      },
      "initialize(address)": {
        "details": "initializer to call after deployment, can only be called once"
      },
      "setApprovedCuratorVaults(address,bool)": {
        "details": "Setter for the list of curator vaults allowed to be used"
      },
      "setFreeReactionLimit(uint256)": {
        "details": "Setter for the amount of reactions allowed per free reaction"
      },
      "setNativeWrappedToken(address)": {
        "details": "Setter for the native wrapped ERC20 token (e.g. WMATIC)"
      },
      "setPaymentToken(address)": {
        "details": "Setter for the payment token"
      },
      "setReactionPrice(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleCuratorLiabilityBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleReferrerBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSpendReferrerBasisPoints(uint256)": {
        "details": "Setter for the spend referrer basis points"
      },
      "setSpendTakerBasisPoints(uint256)": {
        "details": "Setter for the spend taker basis points"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2446,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 2449,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 13045,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "addressManager",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IAddressManager)8719"
      },
      {
        "astId": 13049,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "paymentToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IWMATIC)16140"
      },
      {
        "astId": 13052,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "reactionPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 13055,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleCuratorLiabilityBasisPoints",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 13058,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleReferrerBasisPoints",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 13061,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendTakerBasisPoints",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 13064,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendReferrerBasisPoints",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 13069,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "approvedCuratorVaults",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13076,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "nativeWrappedToken",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IERC20Upgradeable)4886"
      },
      {
        "astId": 13079,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "freeReactionLimit",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 13087,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "sigNonces",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressManager)8719": {
        "encoding": "inplace",
        "label": "contract IAddressManager",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20Upgradeable)4886": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IWMATIC)16140": {
        "encoding": "inplace",
        "label": "contract IWMATIC",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}