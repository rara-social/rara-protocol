{
  "address": "0x6a64e7E4a2248657d50D10f5bEe9c4D7Cb1E88ba",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ChildRegistrarAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "DefaultCuratorVaultAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "LikeTokenFactoryAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "MakerRegistrarAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ParameterManagerAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ReactionNftContractAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "RoleManagerAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "RoyaltyRegistryAddressUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "childRegistrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCuratorVault",
      "outputs": [
        {
          "internalType": "contract ICuratorVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRoleManager",
          "name": "_roleManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "likeTokenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makerRegistrar",
      "outputs": [
        {
          "internalType": "contract IMakerRegistrar",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parameterManager",
      "outputs": [
        {
          "internalType": "contract IParameterManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reactionNftContract",
      "outputs": [
        {
          "internalType": "contract IStandard1155",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleManager",
      "outputs": [
        {
          "internalType": "contract IRoleManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "royaltyRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_childRegistrar",
          "type": "address"
        }
      ],
      "name": "setChildRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICuratorVault",
          "name": "_defaultCuratorVault",
          "type": "address"
        }
      ],
      "name": "setDefaultCuratorVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_likeTokenFactory",
          "type": "address"
        }
      ],
      "name": "setLikeTokenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMakerRegistrar",
          "name": "_makerRegistrar",
          "type": "address"
        }
      ],
      "name": "setMakerRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IParameterManager",
          "name": "_parameterManager",
          "type": "address"
        }
      ],
      "name": "setParameterManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStandard1155",
          "name": "_reactionNftContract",
          "type": "address"
        }
      ],
      "name": "setReactionNftContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IRoleManager",
          "name": "_roleManager",
          "type": "address"
        }
      ],
      "name": "setRoleManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyRegistry",
          "type": "address"
        }
      ],
      "name": "setRoyaltyRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7bcbff0b9f4b7e6c81337fc2c9d514b01229eda023080edac780f98915bb61f6",
  "receipt": {
    "to": null,
    "from": "0x8f1809FA5DDcf8275cf9C92fCeF40B2154a01022",
    "contractAddress": "0x6a64e7E4a2248657d50D10f5bEe9c4D7Cb1E88ba",
    "transactionIndex": 19,
    "gasUsed": "860955",
    "logsBloom": "0x
    "blockHash": "0xda857d61802389be86935c606456c60864e0884ff92b64659695fd09f640ab7a",
    "transactionHash": "0x7bcbff0b9f4b7e6c81337fc2c9d514b01229eda023080edac780f98915bb61f6",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 29300207,
        "transactionHash": "0x7bcbff0b9f4b7e6c81337fc2c9d514b01229eda023080edac780f98915bb61f6",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008f1809fa5ddcf8275cf9c92fcef40b2154a01022",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000045fbd1819ad4b00000000000000000000000000000000000000000000000008c1fb34602150580000000000000000000000000000000000000000000000042e328832b05c563f00000000000000000000000000000000000000000000000008bd9b774807a30d0000000000000000000000000000000000000000000000042e36e7efc876038a",
        "logIndex": 62,
        "blockHash": "0xda857d61802389be86935c606456c60864e0884ff92b64659695fd09f640ab7a"
      }
    ],
    "blockNumber": 29300207,
    "cumulativeGasUsed": "3726378",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "c5133092ee888b5b6431f6825032026e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ChildRegistrarAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"DefaultCuratorVaultAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LikeTokenFactoryAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"MakerRegistrarAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ParameterManagerAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ReactionNftContractAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"RoleManagerAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"RoyaltyRegistryAddressUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"childRegistrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCuratorVault\",\"outputs\":[{\"internalType\":\"contract ICuratorVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRoleManager\",\"name\":\"_roleManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"likeTokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makerRegistrar\",\"outputs\":[{\"internalType\":\"contract IMakerRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameterManager\",\"outputs\":[{\"internalType\":\"contract IParameterManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reactionNftContract\",\"outputs\":[{\"internalType\":\"contract IStandard1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleManager\",\"outputs\":[{\"internalType\":\"contract IRoleManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childRegistrar\",\"type\":\"address\"}],\"name\":\"setChildRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICuratorVault\",\"name\":\"_defaultCuratorVault\",\"type\":\"address\"}],\"name\":\"setDefaultCuratorVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_likeTokenFactory\",\"type\":\"address\"}],\"name\":\"setLikeTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMakerRegistrar\",\"name\":\"_makerRegistrar\",\"type\":\"address\"}],\"name\":\"setMakerRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IParameterManager\",\"name\":\"_parameterManager\",\"type\":\"address\"}],\"name\":\"setParameterManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStandard1155\",\"name\":\"_reactionNftContract\",\"type\":\"address\"}],\"name\":\"setReactionNftContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRoleManager\",\"name\":\"_roleManager\",\"type\":\"address\"}],\"name\":\"setRoleManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyRegistry\",\"type\":\"address\"}],\"name\":\"setRoyaltyRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious addresses. See the public documentation website for more details.\",\"events\":{\"RoleManagerAddressUpdated(address)\":{\"details\":\"Events emitted on updates\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"initializer to call after deployment, can only be called once\"},\"setChildRegistrar(address)\":{\"details\":\"Setter for the L2 bridge registrar\"},\"setDefaultCuratorVault(address)\":{\"details\":\"Setter for the default curator vault address\"},\"setLikeTokenFactory(address)\":{\"details\":\"Setter for the address of the Like Token Factory\"},\"setMakerRegistrar(address)\":{\"details\":\"Setter for the maker registrar address\"},\"setParameterManager(address)\":{\"details\":\"Setter for the role manager address\"},\"setReactionNftContract(address)\":{\"details\":\"Setter for the maker registrar address\"},\"setRoleManager(address)\":{\"details\":\"Setter for the role manager address\"},\"setRoyaltyRegistry(address)\":{\"details\":\"Setter for the address of the royalty registry\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Config/AddressManager.sol\":\"AddressManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"contracts/Config/AddressManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"./AddressManagerStorage.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/// @dev Note: This contract is protected via a permissioned account set in the role manager.  Caution should\\n/// be used as the role owner could renounce the role leaving all future actions disabled.  Additionally,\\n/// if a malicious account was able to obtain the role, they could use it to set values to malicious addresses.\\n/// See the public documentation website for more details.\\ncontract AddressManager is Initializable, AddressManagerStorageV2 {\\n    /// @dev Verifies with the role manager that the calling address has ADMIN role\\n    modifier onlyAdmin() {\\n        require(roleManager.isAddressManagerAdmin(msg.sender), \\\"Not Admin\\\");\\n        _;\\n    }\\n\\n    /// @dev Events emitted on updates\\n    event RoleManagerAddressUpdated(address newAddress);\\n    event ParameterManagerAddressUpdated(address newAddress);\\n    event MakerRegistrarAddressUpdated(address newAddress);\\n    event ReactionNftContractAddressUpdated(address newAddress);\\n    event DefaultCuratorVaultAddressUpdated(address newAddress);\\n    event ChildRegistrarAddressUpdated(address newAddress);\\n    event RoyaltyRegistryAddressUpdated(address newAddress);\\n    event LikeTokenFactoryAddressUpdated(address newAddress);\\n\\n    /// @dev initializer to call after deployment, can only be called once\\n    function initialize(IRoleManager _roleManager) public initializer {\\n        require(address(_roleManager) != address(0x0), ZERO_INPUT);\\n        roleManager = _roleManager;\\n    }\\n\\n    /// @dev Setter for the role manager address\\n    function setRoleManager(IRoleManager _roleManager) external onlyAdmin {\\n        // Sanity check\\n        require(address(_roleManager) != address(0x0), ZERO_INPUT);\\n\\n        // If the role manager address gets corrupted then this contract is DOA\\n        // since no future updates can be performed via permission checks.\\n        // Ensure the target address is valid and configured by requiring the current admin\\n        // making this call is an admin on the new contract\\n        require(_roleManager.isAdmin(msg.sender), \\\"RM invalid\\\");\\n\\n        roleManager = _roleManager;\\n        emit RoleManagerAddressUpdated(address(_roleManager));\\n    }\\n\\n    /// @dev Setter for the role manager address\\n    function setParameterManager(IParameterManager _parameterManager)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_parameterManager) != address(0x0), ZERO_INPUT);\\n        parameterManager = _parameterManager;\\n        emit ParameterManagerAddressUpdated(address(_parameterManager));\\n    }\\n\\n    /// @dev Setter for the maker registrar address\\n    function setMakerRegistrar(IMakerRegistrar _makerRegistrar)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_makerRegistrar) != address(0x0), ZERO_INPUT);\\n        makerRegistrar = _makerRegistrar;\\n        emit MakerRegistrarAddressUpdated(address(_makerRegistrar));\\n    }\\n\\n    /// @dev Setter for the maker registrar address\\n    function setReactionNftContract(IStandard1155 _reactionNftContract)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_reactionNftContract) != address(0x0), ZERO_INPUT);\\n        reactionNftContract = _reactionNftContract;\\n        emit ReactionNftContractAddressUpdated(address(_reactionNftContract));\\n    }\\n\\n    /// @dev Setter for the default curator vault address\\n    function setDefaultCuratorVault(ICuratorVault _defaultCuratorVault)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_defaultCuratorVault) != address(0x0), ZERO_INPUT);\\n        defaultCuratorVault = _defaultCuratorVault;\\n        emit DefaultCuratorVaultAddressUpdated(address(_defaultCuratorVault));\\n    }\\n\\n    /// @dev Setter for the L2 bridge registrar\\n    function setChildRegistrar(address _childRegistrar) external onlyAdmin {\\n        require(address(_childRegistrar) != address(0x0), ZERO_INPUT);\\n        childRegistrar = _childRegistrar;\\n        emit ChildRegistrarAddressUpdated(address(_childRegistrar));\\n    }\\n\\n    /// @dev Setter for the address of the royalty registry\\n    function setRoyaltyRegistry(address _royaltyRegistry) external onlyAdmin {\\n        // We DO allow the royalty registry to be set to 0x0 as this disables the lookup\\n        royaltyRegistry = _royaltyRegistry;\\n        emit RoyaltyRegistryAddressUpdated(royaltyRegistry);\\n    }\\n\\n    /// @dev Setter for the address of the Like Token Factory\\n    function setLikeTokenFactory(address _likeTokenFactory) external onlyAdmin {\\n        // We DO allow the Like Token Factory to be set to 0x0 as this disables the functionality\\n        likeTokenFactory = _likeTokenFactory;\\n        emit LikeTokenFactoryAddressUpdated(likeTokenFactory);\\n    }\\n}\\n\",\"keccak256\":\"0xdd5bfcffda1f78c7a0102947dd112044e068d50aa16dde71b74a0c00a15659a9\",\"license\":\"GPL-3.0\"},\"contracts/Config/AddressManagerStorage.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Parameters/IParameterManager.sol\\\";\\nimport \\\"../Maker/IMakerRegistrar.sol\\\";\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"./IAddressManager.sol\\\";\\n\\n/// @title AddressManagerStorage\\n/// @dev This contract will hold all local variables for the AddressManager Contract\\n/// When upgrading the protocol, inherit from this contract on the V2 version and change the\\n/// AddressManager to inherit from the later version.  This ensures there are no storage layout\\n/// corruptions when upgrading.\\nabstract contract AddressManagerStorageV1 is IAddressManager {\\n    /// @dev Input error for 0 value param\\n    string internal constant ZERO_INPUT = \\\"Invalid 0 input\\\";\\n\\n    /// @dev Local reference to the role manager contract\\n    IRoleManager public roleManager;\\n\\n    /// @dev Local reference to the payment manager contract\\n    IParameterManager public parameterManager;\\n\\n    /// @dev Local reference to the maker registrar contract\\n    IMakerRegistrar public makerRegistrar;\\n\\n    /// @dev Local reference to the reaction NFT contract\\n    IStandard1155 public reactionNftContract;\\n\\n    /// @dev Local reference to the default curator vault\\n    ICuratorVault public defaultCuratorVault;\\n\\n    /// @dev Local reference to the L2 bridge registrar\\n    address public childRegistrar;\\n\\n    /// @dev Address of the Royalty Registry contract\\n    address public royaltyRegistry;\\n}\\n\\n/// On the next version of the protocol, if new variables are added, put them in the below\\n/// contract and use this as the inheritance chain.\\nabstract contract AddressManagerStorageV2 is AddressManagerStorageV1 {\\n    /// @dev Address of the Like Token Factory\\n    address public likeTokenFactory;\\n}\\n\\n/// On the next version of the protocol, if new variables are added, put them in the below\\n/// contract and use this as the inheritance chain.\\n/**\\ncontract AddressManagerStorageV3 is AddressManagerStorageV2 {\\n  address newVariable;\\n}\\n */\\n\",\"keccak256\":\"0x24f5bf9cf37c8d7ee47e68dece4251521b57c69b896b8d1ce8a3f9c25f9fe1ab\",\"license\":\"GPL-3.0\"},\"contracts/Config/IAddressManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Parameters/IParameterManager.sol\\\";\\nimport \\\"../Maker/IMakerRegistrar.sol\\\";\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Reactions/IReactionVault.sol\\\";\\nimport \\\"../CuratorVault/ICuratorVault.sol\\\";\\n\\ninterface IAddressManager {\\n    /// @dev Getter for the role manager address\\n    function roleManager() external returns (IRoleManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setRoleManager(IRoleManager _roleManager) external;\\n\\n    /// @dev Getter for the role manager address\\n    function parameterManager() external returns (IParameterManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setParameterManager(IParameterManager _parameterManager) external;\\n\\n    /// @dev Getter for the maker registrar address\\n    function makerRegistrar() external returns (IMakerRegistrar);\\n\\n    /// @dev Setter for the maker registrar address\\n    function setMakerRegistrar(IMakerRegistrar _makerRegistrar) external;\\n\\n    /// @dev Getter for the reaction NFT contract address\\n    function reactionNftContract() external returns (IStandard1155);\\n\\n    /// @dev Setter for the reaction NFT contract address\\n    function setReactionNftContract(IStandard1155 _reactionNftContract)\\n        external;\\n\\n    /// @dev Getter for the default Curator Vault contract address\\n    function defaultCuratorVault() external returns (ICuratorVault);\\n\\n    /// @dev Setter for the default Curator Vault contract address\\n    function setDefaultCuratorVault(ICuratorVault _defaultCuratorVault)\\n        external;\\n\\n    /// @dev Getter for the L2 bridge registrar\\n    function childRegistrar() external returns (address);\\n\\n    /// @dev Setter for the L2 bridge registrar\\n    function setChildRegistrar(address _childRegistrar) external;\\n\\n    /// @dev Getter for the address of the royalty registry\\n    function royaltyRegistry() external returns (address);\\n\\n    /// @dev Setter for the address of the royalty registry\\n    function setRoyaltyRegistry(address _royaltyRegistry) external;\\n\\n    /// @dev Getter for the address of the Like Token Factory\\n    function likeTokenFactory() external returns (address);\\n\\n    /// @dev Setter for the address of the Like Token Factory\\n    function setLikeTokenFactory(address _likeTokenFactory) external;\\n}\\n\",\"keccak256\":\"0xd1b153a57c0135934db99bf8e91ecff25706412b621a11fdc66d8b2b25bc1283\",\"license\":\"GPL-3.0\"},\"contracts/CuratorVault/ICuratorVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @dev Interface for the curator vault\\ninterface ICuratorVault {\\n    function getTokenId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken\\n    ) external returns (uint256);\\n\\n    function buyCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken,\\n        uint256 paymentAmount,\\n        address mintToAddress,\\n        bool isTakerPosition\\n    ) external returns (uint256);\\n\\n    function sellCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IWMATIC paymentToken,\\n        uint256 tokensToBurn,\\n        address refundToAddress\\n    ) external returns (uint256);\\n\\n    function curatorTokens() external returns (IStandard1155);\\n}\\n\",\"keccak256\":\"0x1426350847e86f2870773a19a359b1e5adf89d81d1d7ae2dbdaa0507cf5ef660\",\"license\":\"GPL-3.0\"},\"contracts/Maker/IMakerRegistrar.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the maker registrar that supports registering and de-registering NFTs\\ninterface IMakerRegistrar {\\n    /// @dev struct for storing details about a registered NFT\\n    struct NftDetails {\\n        bool registered;\\n        address owner;\\n        address[] creators;\\n        uint256[] creatorSaleBasisPoints;\\n    }\\n\\n    function transformToSourceLookup(uint256 metaId) external returns (uint256);\\n\\n    function deriveSourceId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId\\n    ) external returns (uint256);\\n\\n    /// @dev lookup for NftDetails from source ID\\n    function sourceToDetailsLookup(uint256)\\n        external\\n        returns (NftDetails memory);\\n\\n    function verifyOwnership(\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address potentialOwner\\n    ) external returns (bool);\\n\\n    function registerNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address[] memory nftCreatorAddresses,\\n        uint256[] memory creatorSaleBasisPoints,\\n        uint256 optionBits,\\n        string memory ipfsMetadataHash\\n    ) external;\\n\\n    function deRegisterNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcba279f4966ad3a5d506b0661c847b6593805c2e25fbebb3792d33e71769656f\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/IParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\ninterface IParameterManager {\\n    /// @dev Getter for the payment token\\n    function paymentToken() external returns (IWMATIC);\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IWMATIC _paymentToken) external;\\n\\n    /// @dev Getter for the reaction price\\n    function reactionPrice() external returns (uint256);\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the curator liability\\n    function saleCuratorLiabilityBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the curator liability\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the referrer\\n    function saleReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the referrer\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendTakerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the taker\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints) external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the referrer\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the check to see if a curator vault is allowed to be used\\n    function approvedCuratorVaults(address potentialVault)\\n        external\\n        returns (bool);\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved) external;\\n\\n    /// @dev Getter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function nativeWrappedToken() external returns (IERC20Upgradeable);\\n\\n    /// @dev Setter for the native wrapped ERC20 token (e.g. WMATIC)\\n    function setNativeWrappedToken(IERC20Upgradeable _nativeWrappedToken)\\n        external;\\n\\n    /// @dev Setter for free reaction limit\\n    function freeReactionLimit() external returns (uint256);\\n\\n    /// @dev Setter for free reaction limit\\n    function setFreeReactionLimit(uint256 limit) external;\\n}\\n\",\"keccak256\":\"0x091430591a4f7b0d4ac989f9bc08a26c91ae3a01cc4eedc5d4a4cf839c524e04\",\"license\":\"GPL-3.0\"},\"contracts/Permissions/IRoleManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface IRoleManager {\\n    /// @dev Determines if the specified address has capability to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isAdmin(address potentialAddress) external view returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to udpate addresses in the protocol\\n    /// @param potentialAddress Address to check\\n    function isAddressManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to update parameters in the protocol\\n    /// @param potentialAddress Address to check\\n    function isParameterManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isReactionNftAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to purchase curator vault tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorVaultPurchaser(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to mint and burn curator tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorTokenAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x335b249b073e02dd1ca255772734a1f21909694cf774e8c00f04c8095bf9eb30\",\"license\":\"GPL-3.0\"},\"contracts/Reactions/IReactionVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\nimport \\\"../Token/IWMATIC.sol\\\";\\n\\n/// @dev Interface for the ReactionVault that supports buying and spending reactions\\ninterface IReactionVault {\\n    struct ReactionPriceDetails {\\n        IWMATIC paymentToken;\\n        uint256 reactionPrice;\\n        uint256 saleCuratorLiabilityBasisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0x686da314820d3b0a9eaa7409a6885bf49021f2906430167f610cdb047b46dc1b\",\"license\":\"GPL-3.0\"},\"contracts/Token/IStandard1155.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the Standard1155 toke contract.\\ninterface IStandard1155 {\\n    /// @dev Allows a priviledged account to mint tokens to the specified address\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x4d68249e8c10bd9aab5ae4dce0c72c88ac899a451b8624c409780cd60e88abc4\",\"license\":\"GPL-3.0\"},\"contracts/Token/IWMATIC.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for interacting with the wrapped matic token contract\\ninterface IWMATIC is IERC20Upgradeable {\\n    // Send MATIC directly to contract\\n    receive() external payable;\\n\\n    // Call deposit directly\\n    function deposit() external payable;\\n\\n    // Withdraw wrapped tokens into MATIC\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0x24dc1098e5e0ac44ae003cd466dd7d8693b2b5591804cf1f7d9600195b6d7d1c\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e9c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806376104ad51161009257806376104ad5146101a55780637ab0a0d8146101b857806384a608e2146101cb5780639971f8b5146101de578063a11b0712146101f1578063b27bcea114610204578063c0dc069714610217578063c4d66de81461022a578063f1d588c51461023d57600080fd5b8062435da5146100ef578063085da3101461011e57806332823e2214610131578063363f8a65146101465780635c7bdf9d146101595780636345b9e51461016c5780636c9a9a0e1461017f5780636fdfe8c514610192575b600080fd5b600054610108906201000090046001600160a01b031681565b6040516101159190610d7c565b60405180910390f35b600554610108906001600160a01b031681565b61014461013f366004610da8565b610250565b005b600254610108906001600160a01b031681565b610144610167366004610da8565b61039e565b61014461017a366004610da8565b6104d8565b61014461018d366004610da8565b610612565b600454610108906001600160a01b031681565b600354610108906001600160a01b031681565b6101446101c6366004610da8565b6106ff565b6101446101d9366004610da8565b610839565b600754610108906001600160a01b031681565b600654610108906001600160a01b031681565b600154610108906001600160a01b031681565b610144610225366004610da8565b610926565b610144610238366004610da8565b610a60565b61014461024b366004610da8565b610b8a565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610285903390600401610d7c565b60206040518083038186803b15801561029d57600080fd5b505afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610dcc565b6102fa5760405162461bcd60e51b81526004016102f190610dee565b60405180910390fd5b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166103475760405162461bcd60e51b81526004016102f19190610e11565b50600380546001600160a01b0319166001600160a01b0383161790556040517fd54810c3e06d63f1327683c5d6138ee718e8e8f80931b67c8e89a91d82b4d85c90610393908390610d7c565b60405180910390a150565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb906103d3903390600401610d7c565b60206040518083038186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190610dcc565b61043f5760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b03821661048c5760405162461bcd60e51b81526004016102f19190610e11565b50600280546001600160a01b0319166001600160a01b0383161790556040517f173eeb4e9ab44eb875443418bb7ffb76588f582e08f232ca32871efaea8bbe4d90610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061050d903390600401610d7c565b60206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190610dcc565b6105795760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166105c65760405162461bcd60e51b81526004016102f19190610e11565b50600480546001600160a01b0319166001600160a01b0383161790556040517f48ffee3d1acca6256050fd4f23b086fcb8c5eaa5dc8388254cf85e54fe1f25c890610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610647903390600401610d7c565b60206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190610dcc565b6106b35760405162461bcd60e51b81526004016102f190610dee565b600780546001600160a01b0319166001600160a01b0383169081179091556040517f056567443fff3c30a17df7b7a2a09f00d3f8d1984bd7d80bc0c6bd6767a323f29161039391610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610734903390600401610d7c565b60206040518083038186803b15801561074c57600080fd5b505afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107849190610dcc565b6107a05760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166107ed5760405162461bcd60e51b81526004016102f19190610e11565b50600180546001600160a01b0319166001600160a01b0383161790556040517f3ca33f53fcbf1f72afcbe5c097ac9a979793e004e71ab84d580ad6e6313d953d90610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061086e903390600401610d7c565b60206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190610dcc565b6108da5760405162461bcd60e51b81526004016102f190610dee565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f2bd46969b753ce8b44d5e046a713707b8caabd4204229093e8819fd2bc9654499161039391610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061095b903390600401610d7c565b60206040518083038186803b15801561097357600080fd5b505afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190610dcc565b6109c75760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038216610a145760405162461bcd60e51b81526004016102f19190610e11565b50600580546001600160a01b0319166001600160a01b0383161790556040517f991776617152e8088820560d1b451617b5cddf5d2e1c1d0885e969fa1857675390610393908390610d7c565b600054610100900460ff16610a7b5760005460ff1615610a7f565b303b155b610ae25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102f1565b600054610100900460ff16158015610b04576000805461ffff19166101011790555b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038316610b515760405162461bcd60e51b81526004016102f19190610e11565b506000805462010000600160b01b031916620100006001600160a01b038516021790558015610b86576000805461ff00191690555b5050565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610bbf903390600401610d7c565b60206040518083038186803b158015610bd757600080fd5b505afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190610dcc565b610c2b5760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038216610c785760405162461bcd60e51b81526004016102f19190610e11565b50604051630935e01b60e21b81526001600160a01b038216906324d7806c90610ca5903390600401610d7c565b60206040518083038186803b158015610cbd57600080fd5b505afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190610dcc565b610d2e5760405162461bcd60e51b815260206004820152600a6024820152691493481a5b9d985b1a5960b21b60448201526064016102f1565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517ff147991653b648d23bf29ee376dc366e380264f25c11e005b8b1310bc58955b0906103939083905b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610da557600080fd5b50565b600060208284031215610dba57600080fd5b8135610dc581610d90565b9392505050565b600060208284031215610dde57600080fd5b81518015158114610dc557600080fd5b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b600060208083528351808285015260005b81811015610e3e57858101830151858201604001528201610e22565b81811115610e50576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220de448aa585028998e3d35972f7a34f20f674898367c634b7eb8c56f28467f43364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806376104ad51161009257806376104ad5146101a55780637ab0a0d8146101b857806384a608e2146101cb5780639971f8b5146101de578063a11b0712146101f1578063b27bcea114610204578063c0dc069714610217578063c4d66de81461022a578063f1d588c51461023d57600080fd5b8062435da5146100ef578063085da3101461011e57806332823e2214610131578063363f8a65146101465780635c7bdf9d146101595780636345b9e51461016c5780636c9a9a0e1461017f5780636fdfe8c514610192575b600080fd5b600054610108906201000090046001600160a01b031681565b6040516101159190610d7c565b60405180910390f35b600554610108906001600160a01b031681565b61014461013f366004610da8565b610250565b005b600254610108906001600160a01b031681565b610144610167366004610da8565b61039e565b61014461017a366004610da8565b6104d8565b61014461018d366004610da8565b610612565b600454610108906001600160a01b031681565b600354610108906001600160a01b031681565b6101446101c6366004610da8565b6106ff565b6101446101d9366004610da8565b610839565b600754610108906001600160a01b031681565b600654610108906001600160a01b031681565b600154610108906001600160a01b031681565b610144610225366004610da8565b610926565b610144610238366004610da8565b610a60565b61014461024b366004610da8565b610b8a565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610285903390600401610d7c565b60206040518083038186803b15801561029d57600080fd5b505afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610dcc565b6102fa5760405162461bcd60e51b81526004016102f190610dee565b60405180910390fd5b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166103475760405162461bcd60e51b81526004016102f19190610e11565b50600380546001600160a01b0319166001600160a01b0383161790556040517fd54810c3e06d63f1327683c5d6138ee718e8e8f80931b67c8e89a91d82b4d85c90610393908390610d7c565b60405180910390a150565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb906103d3903390600401610d7c565b60206040518083038186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190610dcc565b61043f5760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b03821661048c5760405162461bcd60e51b81526004016102f19190610e11565b50600280546001600160a01b0319166001600160a01b0383161790556040517f173eeb4e9ab44eb875443418bb7ffb76588f582e08f232ca32871efaea8bbe4d90610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061050d903390600401610d7c565b60206040518083038186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190610dcc565b6105795760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166105c65760405162461bcd60e51b81526004016102f19190610e11565b50600480546001600160a01b0319166001600160a01b0383161790556040517f48ffee3d1acca6256050fd4f23b086fcb8c5eaa5dc8388254cf85e54fe1f25c890610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610647903390600401610d7c565b60206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190610dcc565b6106b35760405162461bcd60e51b81526004016102f190610dee565b600780546001600160a01b0319166001600160a01b0383169081179091556040517f056567443fff3c30a17df7b7a2a09f00d3f8d1984bd7d80bc0c6bd6767a323f29161039391610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610734903390600401610d7c565b60206040518083038186803b15801561074c57600080fd5b505afa158015610760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107849190610dcc565b6107a05760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b0382166107ed5760405162461bcd60e51b81526004016102f19190610e11565b50600180546001600160a01b0319166001600160a01b0383161790556040517f3ca33f53fcbf1f72afcbe5c097ac9a979793e004e71ab84d580ad6e6313d953d90610393908390610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061086e903390600401610d7c565b60206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190610dcc565b6108da5760405162461bcd60e51b81526004016102f190610dee565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f2bd46969b753ce8b44d5e046a713707b8caabd4204229093e8819fd2bc9654499161039391610d7c565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb9061095b903390600401610d7c565b60206040518083038186803b15801561097357600080fd5b505afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190610dcc565b6109c75760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038216610a145760405162461bcd60e51b81526004016102f19190610e11565b50600580546001600160a01b0319166001600160a01b0383161790556040517f991776617152e8088820560d1b451617b5cddf5d2e1c1d0885e969fa1857675390610393908390610d7c565b600054610100900460ff16610a7b5760005460ff1615610a7f565b303b155b610ae25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102f1565b600054610100900460ff16158015610b04576000805461ffff19166101011790555b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038316610b515760405162461bcd60e51b81526004016102f19190610e11565b506000805462010000600160b01b031916620100006001600160a01b038516021790558015610b86576000805461ff00191690555b5050565b60005460405163888e81fb60e01b8152620100009091046001600160a01b03169063888e81fb90610bbf903390600401610d7c565b60206040518083038186803b158015610bd757600080fd5b505afa158015610beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0f9190610dcc565b610c2b5760405162461bcd60e51b81526004016102f190610dee565b60408051808201909152600f81526e125b9d985b1a59080c081a5b9c1d5d608a1b60208201526001600160a01b038216610c785760405162461bcd60e51b81526004016102f19190610e11565b50604051630935e01b60e21b81526001600160a01b038216906324d7806c90610ca5903390600401610d7c565b60206040518083038186803b158015610cbd57600080fd5b505afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190610dcc565b610d2e5760405162461bcd60e51b815260206004820152600a6024820152691493481a5b9d985b1a5960b21b60448201526064016102f1565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517ff147991653b648d23bf29ee376dc366e380264f25c11e005b8b1310bc58955b0906103939083905b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610da557600080fd5b50565b600060208284031215610dba57600080fd5b8135610dc581610d90565b9392505050565b600060208284031215610dde57600080fd5b81518015158114610dc557600080fd5b6020808252600990820152682737ba1020b236b4b760b91b604082015260600190565b600060208083528351808285015260005b81811015610e3e57858101830151858201604001528201610e22565b81811115610e50576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220de448aa585028998e3d35972f7a34f20f674898367c634b7eb8c56f28467f43364736f6c63430008090033",
  "devdoc": {
    "details": "Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious addresses. See the public documentation website for more details.",
    "events": {
      "RoleManagerAddressUpdated(address)": {
        "details": "Events emitted on updates"
      }
    },
    "kind": "dev",
    "methods": {
      "initialize(address)": {
        "details": "initializer to call after deployment, can only be called once"
      },
      "setChildRegistrar(address)": {
        "details": "Setter for the L2 bridge registrar"
      },
      "setDefaultCuratorVault(address)": {
        "details": "Setter for the default curator vault address"
      },
      "setLikeTokenFactory(address)": {
        "details": "Setter for the address of the Like Token Factory"
      },
      "setMakerRegistrar(address)": {
        "details": "Setter for the maker registrar address"
      },
      "setParameterManager(address)": {
        "details": "Setter for the role manager address"
      },
      "setReactionNftContract(address)": {
        "details": "Setter for the maker registrar address"
      },
      "setRoleManager(address)": {
        "details": "Setter for the role manager address"
      },
      "setRoyaltyRegistry(address)": {
        "details": "Setter for the address of the royalty registry"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2435,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2438,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 8183,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "roleManager",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IRoleManager)10176"
      },
      {
        "astId": 8187,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "parameterManager",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IParameterManager)9712"
      },
      {
        "astId": 8191,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "makerRegistrar",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IMakerRegistrar)9056"
      },
      {
        "astId": 8195,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "reactionNftContract",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IStandard1155)13706"
      },
      {
        "astId": 8199,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "defaultCuratorVault",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ICuratorVault)8392"
      },
      {
        "astId": 8202,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "childRegistrar",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 8205,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "royaltyRegistry",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 8212,
        "contract": "contracts/Config/AddressManager.sol:AddressManager",
        "label": "likeTokenFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICuratorVault)8392": {
        "encoding": "inplace",
        "label": "contract ICuratorVault",
        "numberOfBytes": "20"
      },
      "t_contract(IMakerRegistrar)9056": {
        "encoding": "inplace",
        "label": "contract IMakerRegistrar",
        "numberOfBytes": "20"
      },
      "t_contract(IParameterManager)9712": {
        "encoding": "inplace",
        "label": "contract IParameterManager",
        "numberOfBytes": "20"
      },
      "t_contract(IRoleManager)10176": {
        "encoding": "inplace",
        "label": "contract IRoleManager",
        "numberOfBytes": "20"
      },
      "t_contract(IStandard1155)13706": {
        "encoding": "inplace",
        "label": "contract IStandard1155",
        "numberOfBytes": "20"
      }
    }
  }
}