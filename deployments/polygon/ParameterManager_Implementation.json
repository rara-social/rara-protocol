{
  "address": "0x80313dCBaA87EEeD43E288160666Ef7799BB54C7",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovedCuratorVaultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "PaymentTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "ReactionPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleCuratorLiabilityBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SaleReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendReferrerBasisPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SpendTakerBasisPointsUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressManager",
      "outputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedCuratorVaults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAddressManager",
          "name": "_addressManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentToken",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reactionPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleCuratorLiabilityBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovedCuratorVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_paymentToken",
          "type": "address"
        }
      ],
      "name": "setPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reactionPrice",
          "type": "uint256"
        }
      ],
      "name": "setReactionPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleCuratorLiabilityBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleCuratorLiabilityBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSaleReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendReferrerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendReferrerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_spendTakerBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSpendTakerBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendReferrerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spendTakerBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x621f3830fe04806b8a3522f44cebeb082f40588c717d2e43b2421d712a6536cc",
  "receipt": {
    "to": null,
    "from": "0xa43C0ad9B1B867AdE1FCF0A88b779b2A3642d1b3",
    "contractAddress": "0x80313dCBaA87EEeD43E288160666Ef7799BB54C7",
    "transactionIndex": 30,
    "gasUsed": "1653167",
    "logsBloom": "0x00000000000000800000000004000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000200200000000000000000000000000000000000000000000000000000000000004000800000000000000001000000008000000000000000000000100000000000000000020000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0xdd654767c1d5277fb9439adb1429f1437c23552f0b78aef05fe0c6b9502a00a4",
    "transactionHash": "0x621f3830fe04806b8a3522f44cebeb082f40588c717d2e43b2421d712a6536cc",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 28479738,
        "transactionHash": "0x621f3830fe04806b8a3522f44cebeb082f40588c717d2e43b2421d712a6536cc",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a43c0ad9b1b867ade1fcf0a88b779b2a3642d1b3",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x000000000000000000000000000000000000000000000000010d90fe080c52880000000000000000000000000000000000000000000000362b32d4bed3c9a2390000000000000000000000000000000000000000000084c87607a2d14b6ab1250000000000000000000000000000000000000000000000362a2543c0cbbd4fb10000000000000000000000000000000000000000000084c8771533cf537703ad",
        "logIndex": 179,
        "blockHash": "0xdd654767c1d5277fb9439adb1429f1437c23552f0b78aef05fe0c6b9502a00a4"
      }
    ],
    "blockNumber": 28479738,
    "cumulativeGasUsed": "8601060",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0c452a7a2a2db8193582d74055ee849a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovedCuratorVaultsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"PaymentTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ReactionPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleCuratorLiabilityBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SaleReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendReferrerBasisPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SpendTakerBasisPointsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressManager\",\"outputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedCuratorVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAddressManager\",\"name\":\"_addressManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reactionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleCuratorLiabilityBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovedCuratorVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reactionPrice\",\"type\":\"uint256\"}],\"name\":\"setReactionPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleCuratorLiabilityBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleCuratorLiabilityBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSaleReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendReferrerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendReferrerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_spendTakerBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSpendTakerBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendReferrerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendTakerBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.\",\"events\":{\"PaymentTokenUpdated(address)\":{\"details\":\"Events emitted on updates\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"initializer to call after deployment, can only be called once\"},\"setApprovedCuratorVaults(address,bool)\":{\"details\":\"Setter for the list of curator vaults allowed to be used\"},\"setPaymentToken(address)\":{\"details\":\"Setter for the payment token\"},\"setReactionPrice(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleCuratorLiabilityBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSaleReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the reaction price\"},\"setSpendReferrerBasisPoints(uint256)\":{\"details\":\"Setter for the spend referrer basis points\"},\"setSpendTakerBasisPoints(uint256)\":{\"details\":\"Setter for the spend taker basis points\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Parameters/ParameterManager.sol\":\"ParameterManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"contracts/Config/IAddressManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"../Parameters/IParameterManager.sol\\\";\\nimport \\\"../Maker/IMakerRegistrar.sol\\\";\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"../Reactions/IReactionVault.sol\\\";\\nimport \\\"../CuratorVault/ICuratorVault.sol\\\";\\n\\ninterface IAddressManager {\\n    /// @dev Getter for the role manager address\\n    function roleManager() external returns (IRoleManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setRoleManager(IRoleManager _roleManager) external;\\n\\n    /// @dev Getter for the role manager address\\n    function parameterManager() external returns (IParameterManager);\\n\\n    /// @dev Setter for the role manager address\\n    function setParameterManager(IParameterManager _parameterManager) external;\\n\\n    /// @dev Getter for the maker registrar address\\n    function makerRegistrar() external returns (IMakerRegistrar);\\n\\n    /// @dev Setter for the maker registrar address\\n    function setMakerRegistrar(IMakerRegistrar _makerRegistrar) external;\\n\\n    /// @dev Getter for the reaction NFT contract address\\n    function reactionNftContract() external returns (IStandard1155);\\n\\n    /// @dev Setter for the reaction NFT contract address\\n    function setReactionNftContract(IStandard1155 _reactionNftContract)\\n        external;\\n\\n    /// @dev Getter for the default Curator Vault contract address\\n    function defaultCuratorVault() external returns (ICuratorVault);\\n\\n    /// @dev Setter for the default Curator Vault contract address\\n    function setDefaultCuratorVault(ICuratorVault _defaultCuratorVault)\\n        external;\\n\\n    /// @dev Getter for the L2 bridge registrar\\n    function childRegistrar() external returns (address);\\n\\n    /// @dev Setter for the L2 bridge registrar\\n    function setChildRegistrar(address _childRegistrar) external;\\n\\n    /// @dev Getter for the address of the royalty registry\\n    function royaltyRegistry() external returns (address);\\n\\n    /// @dev Setter for the address of the royalty registry\\n    function setRoyaltyRegistry(address _royaltyRegistry) external;\\n}\\n\",\"keccak256\":\"0x81fcb53edee0855c6654f161d0f34980ea5d06e8950039b444c507ca7629afd8\",\"license\":\"GPL-3.0\"},\"contracts/CuratorVault/ICuratorVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Token/IStandard1155.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for the curator vault\\ninterface ICuratorVault {\\n    function getTokenId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken\\n    ) external returns (uint256);\\n\\n    function buyCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken,\\n        uint256 paymentAmount,\\n        address mintToAddress,\\n        bool isTakerPosition\\n    ) external returns (uint256);\\n\\n    function sellCuratorTokens(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId,\\n        IERC20Upgradeable paymentToken,\\n        uint256 tokensToBurn,\\n        address refundToAddress\\n    ) external returns (uint256);\\n\\n    function curatorTokens() external returns (IStandard1155);\\n}\\n\",\"keccak256\":\"0xa0fff1bcbd5b23d0bae8387f87b0be81223239bdab5a1d30c423f01cd5d3cba4\",\"license\":\"GPL-3.0\"},\"contracts/Maker/IMakerRegistrar.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the maker registrar that supports registering and de-registering NFTs\\ninterface IMakerRegistrar {\\n    /// @dev struct for storing details about a registered NFT\\n    struct NftDetails {\\n        bool registered;\\n        address owner;\\n        address[] creators;\\n        uint256[] creatorSaleBasisPoints;\\n    }\\n\\n    function transformToSourceLookup(uint256 metaId) external returns (uint256);\\n\\n    function deriveSourceId(\\n        uint256 nftChainId,\\n        address nftAddress,\\n        uint256 nftId\\n    ) external returns (uint256);\\n\\n    /// @dev lookup for NftDetails from source ID\\n    function sourceToDetailsLookup(uint256)\\n        external\\n        returns (NftDetails memory);\\n\\n    function verifyOwnership(\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address potentialOwner\\n    ) external returns (bool);\\n\\n    function registerNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId,\\n        address[] memory nftCreatorAddresses,\\n        uint256[] memory creatorSaleBasisPoints,\\n        uint256 optionBits,\\n        string memory ipfsMetadataHash\\n    ) external;\\n\\n    function deRegisterNftFromBridge(\\n        address owner,\\n        uint256 chainId,\\n        address nftContractAddress,\\n        uint256 nftId\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcba279f4966ad3a5d506b0661c847b6593805c2e25fbebb3792d33e71769656f\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/IParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Permissions/IRoleManager.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\ninterface IParameterManager {\\n    /// @dev Getter for the payment token\\n    function paymentToken() external returns (IERC20Upgradeable);\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IERC20Upgradeable _paymentToken) external;\\n\\n    /// @dev Getter for the reaction price\\n    function reactionPrice() external returns (uint256);\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the curator liability\\n    function saleCuratorLiabilityBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the curator liability\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external;\\n\\n    /// @dev Getter for the cut of purchase price going to the referrer\\n    function saleReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of purchase price going to the referrer\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendTakerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the taker\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints) external;\\n\\n    /// @dev Getter for the cut of spend curator liability going to the taker\\n    function spendReferrerBasisPoints() external returns (uint256);\\n\\n    /// @dev Setter for the cut of spend curator liability going to the referrer\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external;\\n\\n    /// @dev Getter for the check to see if a curator vault is allowed to be used\\n    function approvedCuratorVaults(address potentialVault)\\n        external\\n        returns (bool);\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved) external;\\n}\\n\",\"keccak256\":\"0xf8e7447050272d458904948cf66f7cb48c1b830828a696ddc6e56aab901be637\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"./ParameterManagerStorage.sol\\\";\\nimport \\\"../Config/IAddressManager.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/// @dev Note: This contract is protected via a permissioned account set in the role manager.  Caution should\\n/// be used as the role owner could renounce the role leaving all future actions disabled.  Additionally,\\n/// if a malicious account was able to obtain the role, they could use it to set values to malicious values.\\n/// See the public documentation website for more details.\\ncontract ParameterManager is Initializable, ParameterManagerStorageV1 {\\n    /// @dev Verifies with the role manager that the calling address has ADMIN role\\n    modifier onlyAdmin() {\\n        require(\\n            addressManager.roleManager().isParameterManagerAdmin(msg.sender),\\n            \\\"Not Admin\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev Events emitted on updates\\n    event PaymentTokenUpdated(IERC20Upgradeable newValue);\\n    event ReactionPriceUpdated(uint256 newValue);\\n    event SaleCuratorLiabilityBasisPointsUpdated(uint256 newValue);\\n    event SaleReferrerBasisPointsUpdated(uint256 newValue);\\n    event SpendTakerBasisPointsUpdated(uint256 newValue);\\n    event SpendReferrerBasisPointsUpdated(uint256 newValue);\\n    event ApprovedCuratorVaultsUpdated(address vault, bool approved);\\n\\n    /// @dev initializer to call after deployment, can only be called once\\n    function initialize(IAddressManager _addressManager) public initializer {\\n        require(address(_addressManager) != address(0x0), ZERO_INPUT);\\n        addressManager = _addressManager;\\n    }\\n\\n    /// @dev Setter for the payment token\\n    function setPaymentToken(IERC20Upgradeable _paymentToken)\\n        external\\n        onlyAdmin\\n    {\\n        require(address(_paymentToken) != address(0x0), ZERO_INPUT);\\n        paymentToken = _paymentToken;\\n        emit PaymentTokenUpdated(_paymentToken);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setReactionPrice(uint256 _reactionPrice) external onlyAdmin {\\n        require(_reactionPrice != 0, ZERO_INPUT);\\n        reactionPrice = _reactionPrice;\\n        emit ReactionPriceUpdated(_reactionPrice);\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleCuratorLiabilityBasisPoints(\\n        uint256 _saleCuratorLiabilityBasisPoints\\n    ) external onlyAdmin {\\n        require(_saleCuratorLiabilityBasisPoints != 0, ZERO_INPUT);\\n        require(_saleCuratorLiabilityBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleCuratorLiabilityBasisPoints = _saleCuratorLiabilityBasisPoints;\\n        emit SaleCuratorLiabilityBasisPointsUpdated(\\n            _saleCuratorLiabilityBasisPoints\\n        );\\n    }\\n\\n    /// @dev Setter for the reaction price\\n    function setSaleReferrerBasisPoints(uint256 _saleReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_saleReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_saleReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        saleReferrerBasisPoints = _saleReferrerBasisPoints;\\n        emit SaleReferrerBasisPointsUpdated(_saleReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend taker basis points\\n    function setSpendTakerBasisPoints(uint256 _spendTakerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendTakerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendTakerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendTakerBasisPoints = _spendTakerBasisPoints;\\n        emit SpendTakerBasisPointsUpdated(_spendTakerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the spend referrer basis points\\n    function setSpendReferrerBasisPoints(uint256 _spendReferrerBasisPoints)\\n        external\\n        onlyAdmin\\n    {\\n        require(_spendReferrerBasisPoints != 0, ZERO_INPUT);\\n        require(_spendReferrerBasisPoints <= 10_000, \\\"Invalid bp\\\");\\n        spendReferrerBasisPoints = _spendReferrerBasisPoints;\\n        emit SpendReferrerBasisPointsUpdated(_spendReferrerBasisPoints);\\n    }\\n\\n    /// @dev Setter for the list of curator vaults allowed to be used\\n    function setApprovedCuratorVaults(address vault, bool approved)\\n        external\\n        onlyAdmin\\n    {\\n        require(vault != address(0x0), ZERO_INPUT);\\n        approvedCuratorVaults[vault] = approved;\\n        emit ApprovedCuratorVaultsUpdated(vault, approved);\\n    }\\n}\\n\",\"keccak256\":\"0x9d3125ab9321dd6a9acb3c7a5193498eb36a5238fedb03131696adf392a043d7\",\"license\":\"GPL-3.0\"},\"contracts/Parameters/ParameterManagerStorage.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nimport \\\"../Config/IAddressManager.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"./IParameterManager.sol\\\";\\n\\n/// @title ParameterManagerStorage\\n/// @dev This contract will hold all local variables for the ParameterManager Contract\\n/// When upgrading the protocol, inherit from this contract on the V2 version and change the\\n/// ParameterManager to inherit from the later version.  This ensures there are no storage layout\\n/// corruptions when upgrading.\\nabstract contract ParameterManagerStorageV1 is IParameterManager {\\n    /// @dev Input error for 0 value param\\n    string internal constant ZERO_INPUT = \\\"Invalid 0 input\\\";\\n\\n    /// @dev local reference to the address manager contract\\n    IAddressManager public addressManager;\\n\\n    /// @dev The payment token used to buy reactions\\n    IERC20Upgradeable public paymentToken;\\n\\n    /// @dev The amount each reaction costs in paymentToken\\n    uint256 public reactionPrice;\\n\\n    /// @dev Basis points for the curator liability during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleCuratorLiabilityBasisPoints;\\n\\n    /// @dev Basis points for the referrer during a reaction sale\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public saleReferrerBasisPoints;\\n\\n    /// @dev Basis points for the taker NFT owner.\\n    /// This is the percentage of the Curator Liability being assigned to the taker\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendTakerBasisPoints;\\n\\n    /// @dev Basis points for the spend referrer.\\n    /// This is the percentage of the Curator Liability being assigned to the referrer\\n    /// Basis points are percentage divided by 100 (e.g. 100 Basis Points is 1%)\\n    uint256 public spendReferrerBasisPoints;\\n\\n    /// @dev Mapping of the approved curator vaults (other than the default)\\n    /// If set to true then it is allowed to be used.\\n    mapping(address => bool) public approvedCuratorVaults;\\n}\\n\\n/// On the next version of the protocol, if new variables are added, put them in the below\\n/// contract and use this as the inheritance chain.\\n/**\\ncontract ParameterManagerStorageV2 is ParameterManagerStorageV1 {\\n  address newVariable;\\n}\\n */\\n\",\"keccak256\":\"0x4a5061c14c37794535e2d6edc6e44b6ddd60355ccf8a865e05c761d941b93b21\",\"license\":\"GPL-3.0\"},\"contracts/Permissions/IRoleManager.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\ninterface IRoleManager {\\n    /// @dev Determines if the specified address has capability to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isAdmin(address potentialAddress) external view returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to udpate addresses in the protocol\\n    /// @param potentialAddress Address to check\\n    function isAddressManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to update parameters in the protocol\\n    /// @param potentialAddress Address to check\\n    function isParameterManagerAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to to mint and burn reaction NFTs\\n    /// @param potentialAddress Address to check\\n    function isReactionNftAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to purchase curator vault tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorVaultPurchaser(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @dev Determines if the specified address has permission to mint and burn curator tokens\\n    /// @param potentialAddress Address to check\\n    function isCuratorTokenAdmin(address potentialAddress)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0x335b249b073e02dd1ca255772734a1f21909694cf774e8c00f04c8095bf9eb30\",\"license\":\"GPL-3.0\"},\"contracts/Reactions/IReactionVault.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\n/// @dev Interface for the ReactionVault that supports buying and spending reactions\\ninterface IReactionVault {\\n    struct ReactionPriceDetails {\\n        IERC20Upgradeable paymentToken;\\n        uint256 reactionPrice;\\n        uint256 saleCuratorLiabilityBasisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0x478129551c7120cb59b70605a75d8fda4e27d9a9e3af8a6254757e20de107b61\",\"license\":\"GPL-3.0\"},\"contracts/Token/IStandard1155.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\n/// @dev Interface for the Standard1155 toke contract.\\ninterface IStandard1155 {\\n    /// @dev Allows a priviledged account to mint tokens to the specified address\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    ) external;\\n\\n    function burn(\\n        address from,\\n        uint256 id,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x4d68249e8c10bd9aab5ae4dce0c72c88ac899a451b8624c409780cd60e88abc4\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611d1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c806373cf2a6711610097578063e15a8ce811610066578063e15a8ce814610272578063f467320e1461028e578063f93c0d79146102ac578063fbc8cc58146102ca576100ff565b806373cf2a67146101ec578063c4d66de81461021c578063cc22c3e214610238578063dafe4f9a14610256576100ff565b80635ddb0cf2116100d35780635ddb0cf21461017a578063655f28c114610198578063690dafaf146101b45780636a326ab1146101d0576100ff565b8062ac1c5a146101045780633013ce29146101225780633ab76e9f146101405780635b3c42ff1461015e575b600080fd5b61010c6102e6565b604051610119919061168f565b60405180910390f35b61012a6102ec565b6040516101379190611729565b60405180910390f35b610148610312565b6040516101559190611765565b60405180910390f35b610178600480360381019061017391906117b1565b610338565b005b6101826105a3565b60405161018f919061168f565b60405180910390f35b6101b260048036038101906101ad91906117b1565b6105a9565b005b6101ce60048036038101906101c99190611854565b6107cf565b005b6101ea60048036038101906101e591906118d2565b610a74565b005b610206600480360381019061020191906118ff565b610d00565b604051610213919061193b565b60405180910390f35b61023660048036038101906102319190611994565b610d20565b005b610240610eef565b60405161024d919061168f565b60405180910390f35b610270600480360381019061026b91906117b1565b610ef5565b005b61028c600480360381019061028791906117b1565b611160565b005b6102966113cb565b6040516102a3919061168f565b60405180910390f35b6102b46113d1565b6040516102c1919061168f565b60405180910390f35b6102e460048036038101906102df91906117b1565b6113d7565b005b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016104119190611a3b565b60206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190611a6b565b6104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e70757400000000000000000000000000000000008152509061051c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105139190611b9d565b60405180910390fd5b50612710811115610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990611c0b565b60405180910390fd5b806005819055507f8675d4b071dd3bb74a333fda8ae022c69bab50eeafbf1ae61cbffc73f052ab0281604051610598919061168f565b60405180910390a150565b60025481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561061257600080fd5b505af1158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a91906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016106829190611a3b565b60206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190611a6b565b610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e70757400000000000000000000000000000000008152509061078d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107849190611b9d565b60405180910390fd5b50806002819055507f1efb1db4037f964fdb0d9ce83125a4e3f84d55efaf654830ed8d034c30ad25dc816040516107c4919061168f565b60405180910390a150565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087091906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016108a89190611a3b565b60206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611a6b565b610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90611af5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d69190611b9d565b60405180910390fd5b5080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f69dbdf6bdc042e90cff52a0317d54ee5ffb99ed454145bedb5f0967f948e2d408282604051610a68929190611c2b565b60405180910390a15050565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b8152600401610b4d9190611a3b565b60206040518083038186803b158015610b6557600080fd5b505afa158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611a6b565b610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611af5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b9190611b9d565b60405180910390fd5b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91381604051610cf59190611729565b60405180910390a150565b60076020528060005260406000206000915054906101000a900460ff1681565b600060019054906101000a900460ff16610d485760008054906101000a900460ff1615610d51565b610d50611642565b5b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8790611cc6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610de0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f9190611b9d565b60405180910390fd5b5081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610eeb5760008060016101000a81548160ff0219169083151502179055505b5050565b60065481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9691906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b8152600401610fce9190611a3b565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e9190611a6b565b61105d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105490611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d09190611b9d565b60405180910390fd5b5061271081111561111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690611c0b565b60405180910390fd5b806004819055507f7b568aa985a32d076146f32f69e22aadf408b8f76c3a2f4ee694228afc2cc82781604051611155919061168f565b60405180910390a150565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111c957600080fd5b505af11580156111dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120191906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016112399190611a3b565b60206040518083038186803b15801561125157600080fd5b505afa158015611265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112899190611a6b565b6112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9190611b9d565b60405180910390fd5b5061271081111561138a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138190611c0b565b60405180910390fd5b806003819055507fab8f93c67b0c7463f6f99579fa9b11ae2cb0de74594b6562724ab1ddecddaeb2816040516113c0919061168f565b60405180910390a150565b60045481565b60035481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561144057600080fd5b505af1158015611454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147891906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016114b09190611a3b565b60206040518083038186803b1580156114c857600080fd5b505afa1580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190611a6b565b61153f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153690611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906115bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b29190611b9d565b60405180910390fd5b50612710811115611601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f890611c0b565b60405180910390fd5b806006819055507f5286e9f4ccb1f31b46dce4870d04977bb0cf83b6c79d0ba3d5cc760bc5902a7081604051611637919061168f565b60405180910390a150565b600061164d30611653565b15905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b61168981611676565b82525050565b60006020820190506116a46000830184611680565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116ef6116ea6116e5846116aa565b6116ca565b6116aa565b9050919050565b6000611701826116d4565b9050919050565b6000611713826116f6565b9050919050565b61172381611708565b82525050565b600060208201905061173e600083018461171a565b92915050565b600061174f826116f6565b9050919050565b61175f81611744565b82525050565b600060208201905061177a6000830184611756565b92915050565b600080fd5b61178e81611676565b811461179957600080fd5b50565b6000813590506117ab81611785565b92915050565b6000602082840312156117c7576117c6611780565b5b60006117d58482850161179c565b91505092915050565b60006117e9826116aa565b9050919050565b6117f9816117de565b811461180457600080fd5b50565b600081359050611816816117f0565b92915050565b60008115159050919050565b6118318161181c565b811461183c57600080fd5b50565b60008135905061184e81611828565b92915050565b6000806040838503121561186b5761186a611780565b5b600061187985828601611807565b925050602061188a8582860161183f565b9150509250929050565b600061189f826117de565b9050919050565b6118af81611894565b81146118ba57600080fd5b50565b6000813590506118cc816118a6565b92915050565b6000602082840312156118e8576118e7611780565b5b60006118f6848285016118bd565b91505092915050565b60006020828403121561191557611914611780565b5b600061192384828501611807565b91505092915050565b6119358161181c565b82525050565b6000602082019050611950600083018461192c565b92915050565b6000611961826117de565b9050919050565b61197181611956565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b6000602082840312156119aa576119a9611780565b5b60006119b88482850161197f565b91505092915050565b60006119cc826117de565b9050919050565b6119dc816119c1565b81146119e757600080fd5b50565b6000815190506119f9816119d3565b92915050565b600060208284031215611a1557611a14611780565b5b6000611a23848285016119ea565b91505092915050565b611a35816117de565b82525050565b6000602082019050611a506000830184611a2c565b92915050565b600081519050611a6581611828565b92915050565b600060208284031215611a8157611a80611780565b5b6000611a8f84828501611a56565b91505092915050565b600082825260208201905092915050565b7f4e6f742041646d696e0000000000000000000000000000000000000000000000600082015250565b6000611adf600983611a98565b9150611aea82611aa9565b602082019050919050565b60006020820190508181036000830152611b0e81611ad2565b9050919050565b600081519050919050565b60005b83811015611b3e578082015181840152602081019050611b23565b83811115611b4d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611b6f82611b15565b611b798185611a98565b9350611b89818560208601611b20565b611b9281611b53565b840191505092915050565b60006020820190508181036000830152611bb78184611b64565b905092915050565b7f496e76616c696420627000000000000000000000000000000000000000000000600082015250565b6000611bf5600a83611a98565b9150611c0082611bbf565b602082019050919050565b60006020820190508181036000830152611c2481611be8565b9050919050565b6000604082019050611c406000830185611a2c565b611c4d602083018461192c565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611cb0602e83611a98565b9150611cbb82611c54565b604082019050919050565b60006020820190508181036000830152611cdf81611ca3565b905091905056fea2646970667358221220d41e313a2f8927f6a80f5743472e158ac7883fa51676615f6d161a02e3997aca64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ff5760003560e01c806373cf2a6711610097578063e15a8ce811610066578063e15a8ce814610272578063f467320e1461028e578063f93c0d79146102ac578063fbc8cc58146102ca576100ff565b806373cf2a67146101ec578063c4d66de81461021c578063cc22c3e214610238578063dafe4f9a14610256576100ff565b80635ddb0cf2116100d35780635ddb0cf21461017a578063655f28c114610198578063690dafaf146101b45780636a326ab1146101d0576100ff565b8062ac1c5a146101045780633013ce29146101225780633ab76e9f146101405780635b3c42ff1461015e575b600080fd5b61010c6102e6565b604051610119919061168f565b60405180910390f35b61012a6102ec565b6040516101379190611729565b60405180910390f35b610148610312565b6040516101559190611765565b60405180910390f35b610178600480360381019061017391906117b1565b610338565b005b6101826105a3565b60405161018f919061168f565b60405180910390f35b6101b260048036038101906101ad91906117b1565b6105a9565b005b6101ce60048036038101906101c99190611854565b6107cf565b005b6101ea60048036038101906101e591906118d2565b610a74565b005b610206600480360381019061020191906118ff565b610d00565b604051610213919061193b565b60405180910390f35b61023660048036038101906102319190611994565b610d20565b005b610240610eef565b60405161024d919061168f565b60405180910390f35b610270600480360381019061026b91906117b1565b610ef5565b005b61028c600480360381019061028791906117b1565b611160565b005b6102966113cb565b6040516102a3919061168f565b60405180910390f35b6102b46113d1565b6040516102c1919061168f565b60405180910390f35b6102e460048036038101906102df91906117b1565b6113d7565b005b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d991906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016104119190611a3b565b60206040518083038186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190611a6b565b6104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e70757400000000000000000000000000000000008152509061051c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105139190611b9d565b60405180910390fd5b50612710811115610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990611c0b565b60405180910390fd5b806005819055507f8675d4b071dd3bb74a333fda8ae022c69bab50eeafbf1ae61cbffc73f052ab0281604051610598919061168f565b60405180910390a150565b60025481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561061257600080fd5b505af1158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a91906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016106829190611a3b565b60206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190611a6b565b610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e70757400000000000000000000000000000000008152509061078d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107849190611b9d565b60405180910390fd5b50806002819055507f1efb1db4037f964fdb0d9ce83125a4e3f84d55efaf654830ed8d034c30ad25dc816040516107c4919061168f565b60405180910390a150565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087091906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016108a89190611a3b565b60206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611a6b565b610937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092e90611af5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d69190611b9d565b60405180910390fd5b5080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f69dbdf6bdc042e90cff52a0317d54ee5ffb99ed454145bedb5f0967f948e2d408282604051610a68929190611c2b565b60405180910390a15050565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b8152600401610b4d9190611a3b565b60206040518083038186803b158015610b6557600080fd5b505afa158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611a6b565b610bdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd390611af5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b9190611b9d565b60405180910390fd5b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91381604051610cf59190611729565b60405180910390a150565b60076020528060005260406000206000915054906101000a900460ff1681565b600060019054906101000a900460ff16610d485760008054906101000a900460ff1615610d51565b610d50611642565b5b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8790611cc6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610de0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090610e88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7f9190611b9d565b60405180910390fd5b5081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610eeb5760008060016101000a81548160ff0219169083151502179055505b5050565b60065481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9691906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b8152600401610fce9190611a3b565b60206040518083038186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e9190611a6b565b61105d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105490611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d09190611b9d565b60405180910390fd5b5061271081111561111f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111690611c0b565b60405180910390fd5b806004819055507f7b568aa985a32d076146f32f69e22aadf408b8f76c3a2f4ee694228afc2cc82781604051611155919061168f565b60405180910390a150565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111c957600080fd5b505af11580156111dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120191906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016112399190611a3b565b60206040518083038186803b15801561125157600080fd5b505afa158015611265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112899190611a6b565b6112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e707574000000000000000000000000000000000081525090611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9190611b9d565b60405180910390fd5b5061271081111561138a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138190611c0b565b60405180910390fd5b806003819055507fab8f93c67b0c7463f6f99579fa9b11ae2cb0de74594b6562724ab1ddecddaeb2816040516113c0919061168f565b60405180910390a150565b60045481565b60035481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662435da56040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561144057600080fd5b505af1158015611454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147891906119ff565b73ffffffffffffffffffffffffffffffffffffffff16636d993046336040518263ffffffff1660e01b81526004016114b09190611a3b565b60206040518083038186803b1580156114c857600080fd5b505afa1580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190611a6b565b61153f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153690611af5565b60405180910390fd5b60008114156040518060400160405280600f81526020017f496e76616c6964203020696e7075740000000000000000000000000000000000815250906115bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b29190611b9d565b60405180910390fd5b50612710811115611601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f890611c0b565b60405180910390fd5b806006819055507f5286e9f4ccb1f31b46dce4870d04977bb0cf83b6c79d0ba3d5cc760bc5902a7081604051611637919061168f565b60405180910390a150565b600061164d30611653565b15905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b61168981611676565b82525050565b60006020820190506116a46000830184611680565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116ef6116ea6116e5846116aa565b6116ca565b6116aa565b9050919050565b6000611701826116d4565b9050919050565b6000611713826116f6565b9050919050565b61172381611708565b82525050565b600060208201905061173e600083018461171a565b92915050565b600061174f826116f6565b9050919050565b61175f81611744565b82525050565b600060208201905061177a6000830184611756565b92915050565b600080fd5b61178e81611676565b811461179957600080fd5b50565b6000813590506117ab81611785565b92915050565b6000602082840312156117c7576117c6611780565b5b60006117d58482850161179c565b91505092915050565b60006117e9826116aa565b9050919050565b6117f9816117de565b811461180457600080fd5b50565b600081359050611816816117f0565b92915050565b60008115159050919050565b6118318161181c565b811461183c57600080fd5b50565b60008135905061184e81611828565b92915050565b6000806040838503121561186b5761186a611780565b5b600061187985828601611807565b925050602061188a8582860161183f565b9150509250929050565b600061189f826117de565b9050919050565b6118af81611894565b81146118ba57600080fd5b50565b6000813590506118cc816118a6565b92915050565b6000602082840312156118e8576118e7611780565b5b60006118f6848285016118bd565b91505092915050565b60006020828403121561191557611914611780565b5b600061192384828501611807565b91505092915050565b6119358161181c565b82525050565b6000602082019050611950600083018461192c565b92915050565b6000611961826117de565b9050919050565b61197181611956565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b6000602082840312156119aa576119a9611780565b5b60006119b88482850161197f565b91505092915050565b60006119cc826117de565b9050919050565b6119dc816119c1565b81146119e757600080fd5b50565b6000815190506119f9816119d3565b92915050565b600060208284031215611a1557611a14611780565b5b6000611a23848285016119ea565b91505092915050565b611a35816117de565b82525050565b6000602082019050611a506000830184611a2c565b92915050565b600081519050611a6581611828565b92915050565b600060208284031215611a8157611a80611780565b5b6000611a8f84828501611a56565b91505092915050565b600082825260208201905092915050565b7f4e6f742041646d696e0000000000000000000000000000000000000000000000600082015250565b6000611adf600983611a98565b9150611aea82611aa9565b602082019050919050565b60006020820190508181036000830152611b0e81611ad2565b9050919050565b600081519050919050565b60005b83811015611b3e578082015181840152602081019050611b23565b83811115611b4d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611b6f82611b15565b611b798185611a98565b9350611b89818560208601611b20565b611b9281611b53565b840191505092915050565b60006020820190508181036000830152611bb78184611b64565b905092915050565b7f496e76616c696420627000000000000000000000000000000000000000000000600082015250565b6000611bf5600a83611a98565b9150611c0082611bbf565b602082019050919050565b60006020820190508181036000830152611c2481611be8565b9050919050565b6000604082019050611c406000830185611a2c565b611c4d602083018461192c565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611cb0602e83611a98565b9150611cbb82611c54565b604082019050919050565b60006020820190508181036000830152611cdf81611ca3565b905091905056fea2646970667358221220d41e313a2f8927f6a80f5743472e158ac7883fa51676615f6d161a02e3997aca64736f6c63430008090033",
  "devdoc": {
    "details": "Note: This contract is protected via a permissioned account set in the role manager.  Caution should be used as the role owner could renounce the role leaving all future actions disabled.  Additionally, if a malicious account was able to obtain the role, they could use it to set values to malicious values. See the public documentation website for more details.",
    "events": {
      "PaymentTokenUpdated(address)": {
        "details": "Events emitted on updates"
      }
    },
    "kind": "dev",
    "methods": {
      "initialize(address)": {
        "details": "initializer to call after deployment, can only be called once"
      },
      "setApprovedCuratorVaults(address,bool)": {
        "details": "Setter for the list of curator vaults allowed to be used"
      },
      "setPaymentToken(address)": {
        "details": "Setter for the payment token"
      },
      "setReactionPrice(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleCuratorLiabilityBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSaleReferrerBasisPoints(uint256)": {
        "details": "Setter for the reaction price"
      },
      "setSpendReferrerBasisPoints(uint256)": {
        "details": "Setter for the spend referrer basis points"
      },
      "setSpendTakerBasisPoints(uint256)": {
        "details": "Setter for the spend taker basis points"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2355,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2358,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9364,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "addressManager",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IAddressManager)8208"
      },
      {
        "astId": 9368,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "paymentToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20Upgradeable)4593"
      },
      {
        "astId": 9371,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "reactionPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9374,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleCuratorLiabilityBasisPoints",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 9377,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "saleReferrerBasisPoints",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 9380,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendTakerBasisPoints",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 9383,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "spendReferrerBasisPoints",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 9388,
        "contract": "contracts/Parameters/ParameterManager.sol:ParameterManager",
        "label": "approvedCuratorVaults",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressManager)8208": {
        "encoding": "inplace",
        "label": "contract IAddressManager",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20Upgradeable)4593": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}